{"version":3,"file":"static/js/4264.3b10c68d.chunk.js","mappings":"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AC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,QAEzC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","sources":["../FitAddon/webpack/universalModuleDefinition","../FitAddon/src/FitAddon.ts","../xterm/webpack/universalModuleDefinition","../xterm/src/browser/AccessibilityManager.ts","../xterm/src/browser/Clipboard.ts","../xterm/src/browser/ColorContrastCache.ts","../xterm/src/browser/Lifecycle.ts","../xterm/src/browser/Linkifier2.ts","../xterm/src/browser/LocalizableStrings.ts","../xterm/src/browser/OscLinkProvider.ts","../xterm/src/browser/RenderDebouncer.ts","../xterm/src/browser/Terminal.ts","../xterm/src/browser/TimeBasedDebouncer.ts","../xterm/src/browser/Viewport.ts","../xterm/src/browser/decorations/BufferDecorationRenderer.ts","../xterm/src/browser/decorations/ColorZoneStore.ts","../xterm/src/browser/decorations/OverviewRulerRenderer.ts","../xterm/src/browser/input/CompositionHelper.ts","../xterm/src/browser/input/Mouse.ts","../xterm/src/browser/input/MoveToCell.ts","../xterm/src/browser/renderer/dom/DomRenderer.ts","../xterm/src/browser/renderer/dom/DomRendererRowFactory.ts","../xterm/src/browser/renderer/dom/WidthCache.ts","../xterm/src/browser/renderer/shared/Constants.ts","../xterm/src/browser/renderer/shared/RendererUtils.ts","../xterm/src/browser/selection/SelectionModel.ts","../xterm/src/browser/services/CharSizeService.ts","../xterm/src/browser/services/CharacterJoinerService.ts","../xterm/src/browser/services/CoreBrowserService.ts","../xterm/src/browser/services/MouseService.ts","../xterm/src/browser/services/RenderService.ts","../xterm/src/browser/services/SelectionService.ts","../xterm/src/browser/services/Services.ts","../xterm/src/browser/services/ThemeService.ts","../xterm/src/common/CircularList.ts","../xterm/src/common/Clone.ts","../xterm/src/common/Color.ts","../xterm/src/common/CoreTerminal.ts","../xterm/src/common/EventEmitter.ts","../xterm/src/common/InputHandler.ts","../xterm/src/common/Lifecycle.ts","../xterm/src/common/MultiKeyMap.ts","../xterm/src/common/Platform.ts","../xterm/src/common/SortedList.ts","../xterm/src/common/TaskQueue.ts","../xterm/src/common/WindowsMode.ts","../xterm/src/common/buffer/AttributeData.ts","../xterm/src/common/buffer/Buffer.ts","../xterm/src/common/buffer/BufferLine.ts","../xterm/src/common/buffer/BufferRange.ts","../xterm/src/common/buffer/BufferReflow.ts","../xterm/src/common/buffer/BufferSet.ts","../xterm/src/common/buffer/CellData.ts","../xterm/src/common/buffer/Constants.ts","../xterm/src/common/buffer/Marker.ts","../xterm/src/common/data/Charsets.ts","../xterm/src/common/data/EscapeSequences.ts","../xterm/src/common/input/Keyboard.ts","../xterm/src/common/input/TextDecoder.ts","../xterm/src/common/input/UnicodeV6.ts","../xterm/src/common/input/WriteBuffer.ts","../xterm/src/common/input/XParseColor.ts","../xterm/src/common/parser/Constants.ts","../xterm/src/common/parser/DcsParser.ts","../xterm/src/common/parser/EscapeSequenceParser.ts","../xterm/src/common/parser/OscParser.ts","../xterm/src/common/parser/Params.ts","../xterm/src/common/public/AddonManager.ts","../xterm/src/common/public/BufferApiView.ts","../xterm/src/common/public/BufferLineApiView.ts","../xterm/src/common/public/BufferNamespaceApi.ts","../xterm/src/common/public/ParserApi.ts","../xterm/src/common/public/UnicodeApi.ts","../xterm/src/common/services/BufferService.ts","../xterm/src/common/services/CharsetService.ts","../xterm/src/common/services/CoreMouseService.ts","../xterm/src/common/services/CoreService.ts","../xterm/src/common/services/DecorationService.ts","../xterm/src/common/services/InstantiationService.ts","../xterm/src/common/services/LogService.ts","../xterm/src/common/services/OptionsService.ts","../xterm/src/common/services/OscLinkService.ts","../xterm/src/common/services/ServiceRegistry.ts","../xterm/src/common/services/Services.ts","../xterm/src/common/services/UnicodeService.ts","../xterm/webpack/bootstrap","../xterm/src/browser/public/Terminal.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(self, () => {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon } from 'xterm';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal || isNaN(dims.cols) || isNaN(dims.rows)) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n    const dims: IRenderDimensions = core._renderService.dimensions;\n\n    if (dims.css.cell.width === 0 || dims.css.cell.height === 0) {\n      return undefined;\n    }\n\n    const scrollbarWidth = this._terminal.options.scrollback === 0 ?\n      0 : core.viewport.scrollBarWidth;\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - scrollbarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / dims.css.cell.width)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / dims.css.cell.height))\n    };\n    return geometry;\n  }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(globalThis, () => {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IInstantiationService } from 'common/services/Services';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityContainer: HTMLElement;\n\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n  private _liveRegionDebouncer: IRenderDebouncer;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityContainer = this._coreBrowserService.mainDocument.createElement('div');\n    this._accessibilityContainer.classList.add('xterm-accessibility');\n\n    this._rowContainer = this._coreBrowserService.mainDocument.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityContainer.appendChild(this._rowContainer);\n\n    this._liveRegion = this._coreBrowserService.mainDocument.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityContainer.appendChild(this._liveRegion);\n    this._liveRegionDebouncer = this.register(new TimeBasedDebouncer(this._renderRows.bind(this)));\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityContainer);\n\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n    this.register(this._coreBrowserService.onDprChange(() => this._refreshRowsDimensions()));\n\n    this._refreshRows();\n    this.register(toDisposable(() => {\n      this._accessibilityContainer.remove();\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._liveRegionDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = this._coreBrowserService.mainDocument.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    this._accessibilityContainer.style.width = `${this._renderService.dimensions.css.canvas.width}px`;\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService, optionsService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode && optionsService.rawOptions.ignoreBracketedPasteMode !== true);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBufferCellPosition, ILink, ILinkDecorations, ILinkProvider, ILinkWithState, ILinkifier2, ILinkifierEvent } from 'browser/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, disposeArray, getDisposeArrayDisposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { IBufferService } from 'common/services/Services';\nimport { IMouseService, IRenderService } from './services/Services';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _wasResized: boolean = false;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n    }));\n    // Listen to resize to catch the case where it's resized and the cursor is out of the viewport.\n    this.register(this._bufferService.onResize(() => {\n      this._clearCurrentLink();\n      this._wasResized = true;\n    }));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine\n    //       should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y || this._wasResized) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      this._wasResized = false;\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Listen to viewport changes to re-render the link under the cursor (only when the line the\n      // link is on changes)\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // Sanity check, this shouldn't happen in practice as this listener would be disposed\n          if (!this._currentLink) {\n            return;\n          }\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          const end = this._bufferService.buffer.ydisp + 1 + e.end;\n          // Only clear the link if the viewport change happened on this line\n          if (this._currentLink.link.range.start.y >= start && this._currentLink.link.range.end.y <= end) {\n            this._clearCurrentLink(start, end);\n            if (this._lastMouseEvent && this._element) {\n              // re-eval previously active link after changes\n              const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService!);\n              if (position) {\n                this._askForLink(position, false);\n              }\n            }\n          }\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink, ILinkProvider } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same\n    //       id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _parentWindow: Window,\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._parentWindow.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { copyHandler, handlePasteEvent, moveTextAreaUnderMouseCursor, paste, rightClickHandler } from 'browser/Clipboard';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { CharacterJoinerHandler, CustomKeyEventHandler, IBrowser, IBufferRange, ICompositionHelper, ILinkifier2, ITerminal, IViewport } from 'browser/Types';\nimport { Viewport } from 'browser/Viewport';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { MouseService } from 'browser/services/MouseService';\nimport { RenderService } from 'browser/services/RenderService';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport { ICharSizeService, ICharacterJoinerService, ICoreBrowserService, IMouseService, IRenderService, ISelectionService, IThemeService } from 'browser/services/Services';\nimport { ThemeService } from 'browser/services/ThemeService';\nimport { color, rgba } from 'common/Color';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { ColorRequestType, CoreMouseAction, CoreMouseButton, CoreMouseEventType, IColorEvent, ITerminalOptions, KeyboardResultType, ScrollSource, SpecialColorIndex } from 'common/Types';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { IBuffer } from 'common/buffer/Types';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { IDecoration, IDecorationOptions, IDisposable, ILinkProvider, IMarker } from 'xterm';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { AccessibilityManager } from './AccessibilityManager';\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: MutableDisposable<AccessibilityManager> = this.register(new MutableDisposable());\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case SpecialColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case SpecialColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case SpecialColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const channels = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = rgba.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = rgba.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager.value && this._renderService) {\n        this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n      }\n    } else {\n      this._accessibilityManager.clear();\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService, this.optionsService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    // If the terminal is already opened\n    if (this.element?.ownerDocument.defaultView && this._coreBrowserService) {\n      // Adjust the window if needed\n      if (this.element.ownerDocument.defaultView !== this._coreBrowserService.window) {\n        this._coreBrowserService.window = this.element.ownerDocument.defaultView;\n      }\n      return;\n    }\n\n    this._document = parent.ownerDocument;\n    if (this.options.documentOverride && this.options.documentOverride instanceof Document) {\n      this._document = this.optionsService.rawOptions.documentOverride as Document;\n    }\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = this._document.createDocumentFragment();\n    this._viewportElement = this._document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = this._document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = this._document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = this._document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = this._document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this.register(this._instantiationService.createInstance(CoreBrowserService,\n      this.textarea,\n      parent.ownerDocument.defaultView ?? window,\n      // Force unsafe null in node.js environment for tests\n      this._document ?? (typeof window !== 'undefined') ? window.document : null as any\n    ));\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = this._document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport, this._viewportElement, this._viewportScrollArea);\n    this.viewport.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent, ScrollSource.VIEWPORT)),\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this._document!, this.element!, this.screenElement!, this._viewportElement!, this._helperContainer!, this.linkifier2);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    if (source === ScrollSource.VIEWPORT) {\n      super.scrollLines(disp, suppressScrollEvent, source);\n      this.refresh(0, this.rows - 1);\n    } else {\n      this.viewport?.scrollLines(disp);\n    }\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService, this.optionsService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public registerMarker(cursorYOffset: number): IMarker {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    // IMPORTANT: Fire scroll event before viewport is reset. This ensures embedders get the clear\n    // scroll event and that the viewport's state will be valid for immediate writes.\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n    this.viewport?.reset();\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n    this.viewport?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<{ amount: number, suppressScrollEvent: boolean }>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that\n    // case, therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea());\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  public reset(): void {\n    this._currentRowHeight = 0;\n    this._currentDeviceCellHeight = 0;\n    this._lastRecordedBufferLength = 0;\n    this._lastRecordedViewportHeight = 0;\n    this._lastRecordedBufferHeight = 0;\n    this._lastTouchY = 0;\n    this._lastScrollTop = 0;\n    // Sync on next animation frame to ensure the new terminal state is used\n    this._coreBrowserService.window.requestAnimationFrame(() => this.syncScrollArea());\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderDimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderDimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderDimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._onRequestScrollLines.fire({ amount: 0, suppressScrollEvent: true });\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._onRequestScrollLines.fire({ amount: diff, suppressScrollEvent: true });\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  public scrollLines(disp: number): void {\n    if (disp === 0) {\n      return;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._onRequestScrollLines.fire({ amount: disp, suppressScrollEvent: false });\n    } else {\n      const amount = disp * this._currentRowHeight;\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        this._smoothScrollState.target = this._smoothScrollState.origin + amount;\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n\n  public getBufferElements(startLine: number, endLine?: number): { bufferElements: HTMLElement[], cursorElement?: HTMLElement } {\n    let currentLine: string = '';\n    let cursorElement: HTMLElement | undefined;\n    const bufferElements: HTMLElement[] = [];\n    const end = endLine ?? this._bufferService.buffer.lines.length;\n    const lines = this._bufferService.buffer.lines;\n    for (let i = startLine; i < end; i++) {\n      const line = lines.get(i);\n      if (!line) {\n        continue;\n      }\n      const isWrapped = lines.get(i + 1)?.isWrapped;\n      currentLine += line.translateToString(!isWrapped);\n      if (!isWrapped || i === lines.length - 1) {\n        const div = document.createElement('div');\n        div.textContent = currentLine;\n        bufferElements.push(div);\n        if (currentLine.length > 0) {\n          cursorElement = div;\n        }\n        currentLine = '';\n      }\n    }\n    return { bufferElements, cursorElement };\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(this._coreBrowserService.onDprChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = this._coreBrowserService.mainDocument.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.classList.toggle('xterm-decoration-top-layer', decoration?.options?.layer === 'top');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n        decoration.onDispose(() => {\n          this._decorationElements.delete(decoration);\n          element!.remove();\n        });\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = this._coreBrowserService.mainDocument.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(this._coreBrowserService.onDprChange(() => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowserService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowserService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowserService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowserService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DomRendererRowFactory, RowCss } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _widthCache: WidthCache;\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _document: Document,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _helperContainer: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = this._document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = this._document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(this._themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(this._themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      this._rowContainer.remove();\n      this._selectionContainer.remove();\n      this._widthCache.dispose();\n      this._themeStyleElement.remove();\n      this._dimensionsStyleElement.remove();\n    }));\n\n    this._widthCache = new WidthCache(this._document, this._helperContainer);\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = this._document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +   // TODO: find workaround for inline-block (creates ~20% render penalty)\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = this._document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      ` font-kerning: none;` +\n      ` white-space: pre` +\n      `}`;\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .xterm-dim {` +\n      ` color: ${color.multiplyOpacity(colors.foreground, 0.5).css};` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${RowCss.BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  border-bottom-style: hidden;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: inherit;` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}:not(.${RowCss.CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css} !important;` +\n      ` color: ${colors.cursorAccent.css} !important;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_OUTLINE_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` border-bottom: 1px ${colors.cursor.css};` +\n      ` border-bottom-style: solid;` +\n      ` height: calc(100% - 1px);` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(c, 0.5).css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(color.opaque(colors.background), 0.5).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  /**\n   * default letter spacing\n   * Due to rounding issues in dimensions dpr calc glyph might render\n   * slightly too wide or too narrow. The method corrects the stacking offsets\n   * by applying a default letter-spacing for all chars.\n   * The value gets passed to the row factory to avoid setting this value again\n   * (render speedup is roughly 10%).\n   */\n  private _setDefaultSpacing(): void {\n    // measure same char as in CharSizeService to get the base deviation\n    const spacing = this.dimensions.css.cell.width - this._widthCache.get('W', false, false);\n    this._rowContainer.style.letterSpacing = `${spacing}px`;\n    this._rowFactory.defaultSpacing = spacing;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = this._document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n    this.renderRows(0, this._bufferService.rows - 1);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n    this.renderRows(this._bufferService.buffer.y, this._bufferService.buffer.y);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    this._selectionContainer.replaceChildren();\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = this._document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = this._document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${colStart * this.dimensions.css.cell.width}px`;\n    element.style.width = `${this.dimensions.css.cell.width * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    // Refresh CSS\n    this._injectCss(this._themeService.colors);\n    // update spacing cache\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and\n       * `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    for (let y = start; y <= end; y++) {\n      const row = y + buffer.ydisp;\n      const rowElement = this._rowElements[y];\n      const lineData = buffer.lines.get(row);\n      if (!rowElement || !lineData) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          lineData,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          -1,\n          -1\n        )\n      );\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    /**\n     * NOTE: The linkifier may send out of viewport y-values if:\n     * - negative y-value: the link started at a higher line\n     * - y-value >= maxY: the link ends at a line below viewport\n     *\n     * For negative y-values we can simply adjust x = 0,\n     * as higher up link start means, that everything from\n     * (0,0) is a link under top-down-left-right char progression\n     *\n     * Additionally there might be a small chance of out-of-sync x|y-values\n     * from a race condition of render updates vs. link event handler execution:\n     * - (sync) resize: chances terminal buffer in sync, schedules render update async\n     * - (async) link handler race condition: new buffer metrics, but still on old render state\n     * - (async) render update: brings term metrics and render state back in sync\n     */\n    // clip coords into viewport\n    if (y < 0) x = 0;\n    if (y2 < 0) x2 = 0;\n    const maxY = this._bufferService.rows - 1;\n    y = Math.max(Math.min(y, maxY), 0);\n    y2 = Math.max(Math.min(y2, maxY), 0);\n\n    cols = Math.min(cols, this._bufferService.cols);\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    // refresh rows within link range\n    for (let i = y; i <= y2; ++i) {\n      const row = i + buffer.ydisp;\n      const rowElement = this._rowElements[i];\n      const bufferline = buffer.lines.get(row);\n      if (!rowElement || !bufferline) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          bufferline,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          enabled ? (i === y ? x : 0) : -1,\n          enabled ? ((i === y2 ? x2 : cols) - 1) : -1\n        )\n      );\n    }\n  }\n}\n","/**\n * Copyright (c) 2018, 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { IColorContrastCache } from 'browser/Types';\n\n\nexport const enum RowCss {\n  BOLD_CLASS = 'xterm-bold',\n  DIM_CLASS = 'xterm-dim',\n  ITALIC_CLASS = 'xterm-italic',\n  UNDERLINE_CLASS = 'xterm-underline',\n  OVERLINE_CLASS = 'xterm-overline',\n  STRIKETHROUGH_CLASS = 'xterm-strikethrough',\n  CURSOR_CLASS = 'xterm-cursor',\n  CURSOR_BLINK_CLASS = 'xterm-cursor-blink',\n  CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block',\n  CURSOR_STYLE_OUTLINE_CLASS = 'xterm-cursor-outline',\n  CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar',\n  CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline'\n}\n\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  public defaultSpacing = 0;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(\n    lineData: IBufferLine,\n    row: number,\n    isCursorRow: boolean,\n    cursorStyle: string | undefined,\n    cursorInactiveStyle: string | undefined,\n    cursorX: number,\n    cursorBlink: boolean,\n    cellWidth: number,\n    widthCache: WidthCache,\n    linkStart: number,\n    linkEnd: number\n  ): HTMLSpanElement[] {\n\n    const elements: HTMLSpanElement[] = [];\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    const colors = this._themeService.colors;\n\n    let lineLength = lineData.getNoBgTrimmedLength();\n    if (isCursorRow && lineLength < cursorX + 1) {\n      lineLength = cursorX + 1;\n    }\n\n    let charElement: HTMLSpanElement | undefined;\n    let cellAmount = 0;\n    let text = '';\n    let oldBg = 0;\n    let oldFg = 0;\n    let oldExt = 0;\n    let oldLinkHover: number | boolean = false;\n    let oldSpacing = 0;\n    let oldIsInSelection: boolean = false;\n    let spacing = 0;\n    const classes: string[] = [];\n\n    const hasHover = linkStart !== -1 && linkEnd !== -1;\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const isInSelection = this._isCellInSelection(x, row);\n      const isCursorCell = isCursorRow && x === cursorX;\n      const isLinkHover = hasHover && x >= linkStart && x <= linkEnd;\n\n      let isDecorated = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        isDecorated = true;\n      });\n\n      // get chars to render for this cell\n      let chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n      if (chars === ' ' && (cell.isUnderline() || cell.isOverline())) {\n        chars = '\\xa0';\n      }\n\n      // lookup char render width and calc spacing\n      spacing = width * cellWidth - widthCache.get(chars, cell.isBold(), cell.isItalic());\n\n      if (!charElement) {\n        charElement = this._document.createElement('span');\n      } else {\n        /**\n         * chars can only be merged on existing span if:\n         * - existing span only contains mergeable chars (cellAmount != 0)\n         * - bg did not change (or both are in selection)\n         * - fg did not change (or both are in selection and selection fg is set)\n         * - ext did not change\n         * - underline from hover state did not change\n         * - cell content renders to same letter-spacing\n         * - cell is not cursor\n         */\n        if (\n          cellAmount\n          && (\n            (isInSelection && oldIsInSelection)\n            || (!isInSelection && !oldIsInSelection && cell.bg === oldBg)\n          )\n          && (\n            (isInSelection && oldIsInSelection && colors.selectionForeground)\n            || cell.fg === oldFg\n          )\n          && cell.extended.ext === oldExt\n          && isLinkHover === oldLinkHover\n          && spacing === oldSpacing\n          && !isCursorCell\n          && !isJoined\n          && !isDecorated\n        ) {\n          // no span alterations, thus only account chars skipping all code below\n          if (cell.isInvisible()) {\n            text += WHITESPACE_CELL_CHAR;\n          } else {\n            text += chars;\n          }\n          cellAmount++;\n          continue;\n        } else {\n          /**\n           * cannot merge:\n           * - apply left-over text to old span\n           * - create new span, reset state holders cellAmount & text\n           */\n          if (cellAmount) {\n            charElement.textContent = text;\n          }\n          charElement = this._document.createElement('span');\n          cellAmount = 0;\n          text = '';\n        }\n      }\n      // preserve conditions for next merger eval round\n      oldBg = cell.bg;\n      oldFg = cell.fg;\n      oldExt = cell.extended.ext;\n      oldLinkHover = isLinkHover;\n      oldSpacing = spacing;\n      oldIsInSelection = isInSelection;\n\n      if (isJoined) {\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorCell && this._coreService.isCursorInitialized) {\n        classes.push(RowCss.CURSOR_CLASS);\n        if (this._coreBrowserService.isFocused) {\n          if (cursorBlink) {\n            classes.push(RowCss.CURSOR_BLINK_CLASS);\n          }\n          classes.push(\n            cursorStyle === 'bar'\n              ? RowCss.CURSOR_STYLE_BAR_CLASS\n              : cursorStyle === 'underline'\n                ? RowCss.CURSOR_STYLE_UNDERLINE_CLASS\n                : RowCss.CURSOR_STYLE_BLOCK_CLASS\n          );\n        } else {\n          if (cursorInactiveStyle) {\n            switch (cursorInactiveStyle) {\n              case 'outline':\n                classes.push(RowCss.CURSOR_STYLE_OUTLINE_CLASS);\n                break;\n              case 'block':\n                classes.push(RowCss.CURSOR_STYLE_BLOCK_CLASS);\n                break;\n              case 'bar':\n                classes.push(RowCss.CURSOR_STYLE_BAR_CLASS);\n                break;\n              case 'underline':\n                classes.push(RowCss.CURSOR_STYLE_UNDERLINE_CLASS);\n                break;\n              default:\n                break;\n            }\n          }\n        }\n      }\n\n      if (cell.isBold()) {\n        classes.push(RowCss.BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        classes.push(RowCss.ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        classes.push(RowCss.DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        text = WHITESPACE_CELL_CHAR;\n      } else {\n        text = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        classes.push(`${RowCss.UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isOverline()) {\n        classes.push(RowCss.OVERLINE_CLASS);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        classes.push(RowCss.STRIKETHROUGH_CLASS);\n      }\n\n      // apply link hover underline late, effectively overrides any previous text-decoration\n      // settings\n      if (isLinkHover) {\n        charElement.style.textDecoration = 'underline';\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection\n      if (!isTop && isInSelection) {\n        // If in the selection, force the element to be above the selection to improve contrast and\n        // support opaque selections. The applies background is not actually needed here as\n        // selection is drawn in a seperate container, the main purpose of this to ensuring minimum\n        // contrast ratio\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        bg = bgOverride.rgba >> 8 & 0xFFFFFF;\n        bgColorMode = Attributes.CM_RGB;\n        // Since an opaque selection is being rendered, the selection pretends to be a decoration to\n        // ensure text is drawn above the selection.\n        isTop = true;\n        // Apply selection foreground if applicable\n        if (colors.selectionForeground) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        classes.push('xterm-decoration-top');\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          classes.push(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            classes.push(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            classes.push(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, fgOverride)) {\n            if (isInverse) {\n              classes.push(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // apply CSS classes\n      // slightly faster than using classList by omitting\n      // checks for doubled entries (code above should not have doublets)\n      if (classes.length) {\n        charElement.className = classes.join(' ');\n        classes.length = 0;\n      }\n\n      // exclude conditions for cell merging - never merge these\n      if (!isCursorCell && !isJoined && !isDecorated) {\n        cellAmount++;\n      } else {\n        charElement.textContent = text;\n      }\n      // apply letter-spacing rule\n      if (spacing !== this.defaultSpacing) {\n        charElement.style.letterSpacing = `${spacing}px`;\n      }\n\n      elements.push(charElement);\n      x = lastCharX;\n    }\n\n    // postfix text of last merged span\n    if (charElement && cellAmount) {\n      charElement.textContent = text;\n    }\n\n    return elements;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    const cache = this._getContrastCache(cell);\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = cache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      // Dim cells only require half the contrast, otherwise they wouldn't be distinguishable from\n      // non-dim cells\n      const ratio = this._optionsService.rawOptions.minimumContrastRatio / (cell.isDim() ? 2 : 1);\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, ratio);\n      cache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _getContrastCache(cell: ICellData): IColorContrastCache {\n    if (cell.isDim()) {\n      return this._themeService.colors.halfContrastCache;\n    }\n    return this._themeService.colors.contrastCache;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { FontWeight } from 'common/services/Services';\n\n\nexport const enum WidthCacheSettings {\n  /** sentinel for unset values in flat cache */\n  FLAT_UNSET = -9999,\n  /** size of flat cache, size-1 equals highest codepoint handled by flat */\n  FLAT_SIZE = 256,\n  /** char repeat for measuring */\n  REPEAT = 32\n}\n\n\nconst enum FontVariant {\n  REGULAR = 0,\n  BOLD = 1,\n  ITALIC = 2,\n  BOLD_ITALIC = 3\n}\n\n\nexport class WidthCache implements IDisposable {\n  // flat cache for regular variant up to CacheSettings.FLAT_SIZE\n  // NOTE: ~4x faster access than holey (serving >>80% of terminal content)\n  //       It has a small memory footprint (only 1MB for full BMP caching),\n  //       still the sweet spot is not reached before touching 32k different codepoints,\n  //       thus we store the remaining <<20% of terminal data in a holey structure.\n  protected _flat = new Float32Array(WidthCacheSettings.FLAT_SIZE);\n\n  // holey cache for bold, italic and bold&italic for any string\n  // FIXME: can grow really big over time (~8.5 MB for full BMP caching),\n  //        so a shared API across terminals is needed\n  protected _holey: Map<string, number> | undefined;\n\n  private _font = '';\n  private _fontSize = 0;\n  private _weight: FontWeight = 'normal';\n  private _weightBold: FontWeight = 'bold';\n  private _container: HTMLDivElement;\n  private _measureElements: HTMLSpanElement[] = [];\n\n  constructor(_document: Document, _helperContainer: HTMLElement) {\n    this._container = _document.createElement('div');\n    this._container.classList.add('xterm-width-cache-measure-container');\n    this._container.setAttribute('aria-hidden', 'true');\n    // SP should stack in spans\n    this._container.style.whiteSpace = 'pre';\n    // avoid undercuts in non-monospace fonts from kerning\n    this._container.style.fontKerning = 'none';\n\n    const regular = _document.createElement('span');\n    regular.classList.add('xterm-char-measure-element');\n\n    const bold = _document.createElement('span');\n    bold.classList.add('xterm-char-measure-element');\n    bold.style.fontWeight = 'bold';\n\n    const italic = _document.createElement('span');\n    italic.classList.add('xterm-char-measure-element');\n    italic.style.fontStyle = 'italic';\n\n    const boldItalic = _document.createElement('span');\n    boldItalic.classList.add('xterm-char-measure-element');\n    boldItalic.style.fontWeight = 'bold';\n    boldItalic.style.fontStyle = 'italic';\n\n    // NOTE: must be in order of FontVariant\n    this._measureElements = [regular, bold, italic, boldItalic];\n    this._container.appendChild(regular);\n    this._container.appendChild(bold);\n    this._container.appendChild(italic);\n    this._container.appendChild(boldItalic);\n\n    _helperContainer.appendChild(this._container);\n\n    this.clear();\n  }\n\n  public dispose(): void {\n    this._container.remove();           // remove elements from DOM\n    this._measureElements.length = 0;   // release element refs\n    this._holey = undefined;            // free cache memory via GC\n  }\n\n  /**\n   * Clear the width cache.\n   */\n  public clear(): void {\n    this._flat.fill(WidthCacheSettings.FLAT_UNSET);\n    // .clear() has some overhead, re-assign instead (>3 times faster)\n    this._holey = new Map<string, number>();\n  }\n\n  /**\n   * Set the font for measuring.\n   * Must be called for any changes on font settings.\n   * Also clears the cache.\n   */\n  public setFont(font: string, fontSize: number, weight: FontWeight, weightBold: FontWeight): void {\n    // skip if nothing changed\n    if (font === this._font\n      && fontSize === this._fontSize\n      && weight === this._weight\n      && weightBold === this._weightBold\n    ) {\n      return;\n    }\n\n    this._font = font;\n    this._fontSize = fontSize;\n    this._weight = weight;\n    this._weightBold = weightBold;\n\n    this._container.style.fontFamily = this._font;\n    this._container.style.fontSize = `${this._fontSize}px`;\n    this._measureElements[FontVariant.REGULAR].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD].style.fontWeight = `${weightBold}`;\n    this._measureElements[FontVariant.ITALIC].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD_ITALIC].style.fontWeight = `${weightBold}`;\n\n    this.clear();\n  }\n\n  /**\n   * Get the render width for cell content `c` with current font settings.\n   * `variant` denotes the font variant to be used.\n   */\n  public get(c: string, bold: boolean | number, italic: boolean | number): number {\n    let cp = 0;\n    if (!bold && !italic && c.length === 1 && (cp = c.charCodeAt(0)) < WidthCacheSettings.FLAT_SIZE) {\n      return this._flat[cp] !== WidthCacheSettings.FLAT_UNSET\n        ? this._flat[cp]\n        : (this._flat[cp] = this._measure(c, 0));\n    }\n    let key = c;\n    if (bold) key += 'B';\n    if (italic) key += 'I';\n    let width = this._holey!.get(key);\n    if (width === undefined) {\n      let variant = 0;\n      if (bold) variant |= FontVariant.BOLD;\n      if (italic) variant |= FontVariant.ITALIC;\n      width = this._measure(c, variant);\n      this._holey!.set(key, width);\n    }\n    return width;\n  }\n\n  protected _measure(c: string, variant: FontVariant): number {\n    const el = this._measureElements[variant];\n    el.textContent = c.repeat(WidthCacheSettings.REPEAT);\n    return el.offsetWidth / WidthCacheSettings.REPEAT;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge\n// would result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n\nconst enum MeasureSettings {\n  REPEAT = 32\n}\n\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses\n// ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W'.repeat(MeasureSettings.REPEAT);\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._measureElement.style.whiteSpace = 'pre';\n    this._measureElement.style.fontKerning = 'none';\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = {\n      height: Number(this._measureElement.offsetHeight),\n      width: Number(this._measureElement.offsetWidth)\n    };\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width / MeasureSettings.REPEAT;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { ICoreBrowserService } from './Services';\nimport { EventEmitter, forwardEvent } from 'common/EventEmitter';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class CoreBrowserService extends Disposable implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n  private _screenDprMonitor = new ScreenDprMonitor(this._window);\n\n  private readonly _onDprChange = this.register(new EventEmitter<number>());\n  public readonly onDprChange = this._onDprChange.event;\n  private readonly _onWindowChange = this.register(new EventEmitter<Window & typeof globalThis>());\n  public readonly onWindowChange = this._onWindowChange.event;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    private _window: Window & typeof globalThis,\n    public readonly mainDocument: Document\n  ) {\n    super();\n\n    // Monitor device pixel ratio\n    this.register(this.onWindowChange(w => this._screenDprMonitor.setWindow(w)));\n    this.register(forwardEvent(this._screenDprMonitor.onDprChange, this._onDprChange));\n\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get window(): Window & typeof globalThis {\n    return this._window;\n  }\n\n  public set window(value: Window & typeof globalThis) {\n    if (this._window !== value) {\n      this._window = value;\n      this._onWindowChange.fire(this._window);\n    }\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nclass ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n  private _windowResizeListener = this.register(new MutableDisposable());\n\n  private readonly _onDprChange = this.register(new EventEmitter<number>());\n  public readonly onDprChange = this._onDprChange.event;\n\n  constructor(private _parentWindow: Window) {\n    super();\n\n    // Initialize listener and dpr value\n    this._outerListener = () => this._setDprAndFireIfDiffers();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._updateDpr();\n\n    // Monitor active window resize\n    this._setWindowResizeListener();\n\n    // Setup additional disposables\n    this.register(toDisposable(() => this.clearListener()));\n  }\n\n\n  public setWindow(parentWindow: Window): void {\n    this._parentWindow = parentWindow;\n    this._setWindowResizeListener();\n    this._setDprAndFireIfDiffers();\n  }\n\n  private _setWindowResizeListener(): void {\n    this._windowResizeListener.value = addDisposableDomListener(this._parentWindow, 'resize', () => this._setDprAndFireIfDiffers());\n  }\n\n  private _setDprAndFireIfDiffers(): void {\n    if (this._parentWindow.devicePixelRatio !== this._currentDevicePixelRatio) {\n      this._onDprChange.fire(this._parentWindow.devicePixelRatio);\n    }\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n    if (!this._charSizeService.hasValidSize) {\n      return undefined;\n    }\n    coords[0] = Math.min(Math.max(coords[0], 0), this._renderService.dimensions.css.canvas.width - 1);\n    coords[1] = Math.min(Math.max(coords[1], 0), this._renderService.dimensions.css.canvas.height - 1);\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, MutableDisposable } from 'common/Lifecycle';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { IBufferService, IDecorationService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: MutableDisposable<IRenderer> = this.register(new MutableDisposable());\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _pausedResizeTask = new DebouncedIdleTask();\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange =  this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer.value!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this._renderDebouncer = new RenderDebouncer(coreBrowserService.window, (start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this.register(coreBrowserService.onDprChange(() => this.handleDevicePixelRatioChange()));\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer.value?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in coreBrowserService.window) {\n      const observer = new coreBrowserService.window.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n\n    // Since this is debounced, a resize event could have happened between the time a refresh was\n    // requested and when this triggers. Clamp the values of start and end to ensure they're valid\n    // given the current viewport state.\n    start = Math.min(start, this._rowCount - 1);\n    end = Math.min(end, this._rowCount - 1);\n\n    // Render\n    this._renderer.value.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.value.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.value.dimensions.css.canvas.width === this._canvasWidth && this._renderer.value.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.value.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer.value;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    this._renderer.value = renderer;\n    // If the value was not set, the terminal is being disposed so ignore it\n    if (this._renderer.value) {\n      this._renderer.value.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n      // Force a refresh\n      this._needsSelectionRefresh = true;\n      this._fullRefresh();\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer.value!.handleResize(cols, rows));\n    } else {\n      this._renderer.value.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer.value?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer.value?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer.value?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.value?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer.value?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.value?.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { ICoreBrowserService, IMouseService, IRenderService, ISelectionService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport { getRangeLength } from 'common/buffer/BufferRange';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        if (this._model.selectionEnd[0] < this._bufferService.cols) {\n          this._model.selectionEnd[0]++;\n        }\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { AllColorIndex, IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n\n  readonly onDprChange: IEvent<number>;\n  readonly onWindowChange: IEvent<Window & typeof globalThis>;\n\n  /**\n   * Gets or sets the parent window that the terminal is rendered into. DOM and rendering APIs (e.g.\n   * requestAnimationFrame) should be invoked in the context of this window. This should be set when\n   * the window hosting the xterm.js instance changes.\n   */\n  window: Window & typeof globalThis;\n  /**\n   * The document of the primary window to be used to create elements when working with multiple\n   * windows. This is defined by the documentOverride setting.\n   */\n  readonly mainDocument: Document;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: AllColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { AllColorIndex, IColor, SpecialColorIndex } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache = new ColorContrastCache();\n  private _halfContrastCache: IColorContrastCache = new ColorContrastCache();\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache,\n      halfContrastCache: this._halfContrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._halfContrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: AllColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: AllColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case SpecialColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case SpecialColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case SpecialColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb',\n * '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    // This is guaranteed to run in the first window, so document should be correct\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsWrappingHeuristics = this.register(new MutableDisposable());\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onMultipleOptionChange(['windowsMode', 'windowsPty'], () => this._handleWindowsPtyOptionChange()));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used to avoid\n   * unwanted events being handled by the viewport when the event was triggered from the viewport\n   * originally.\n   * @param source Which component the event came from.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  public scrollToTop(): void {\n    this.scrollLines(-this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToBottom(): void {\n    this.scrollLines(this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this._bufferService.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    this._handleWindowsPtyOptionChange();\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n\n  private _handleWindowsPtyOptionChange(): void {\n    let value = false;\n    const windowsPty = this.optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber !== undefined && windowsPty.buildNumber !== undefined) {\n      value = !!(windowsPty.backend === 'conpty' && windowsPty.buildNumber < 21376);\n    } else if (this.optionsService.rawOptions.windowsMode) {\n      value = true;\n    }\n    if (value) {\n      this._enableWindowsWrappingHeuristics();\n    } else {\n      this._windowsWrappingHeuristics.clear();\n    }\n  }\n\n  protected _enableWindowsWrappingHeuristics(): void {\n    if (!this._windowsWrappingHeuristics.value) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsWrappingHeuristics.value = toDisposable(() => {\n        for (const d of disposables) {\n          d.dispose();\n        }\n      });\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    this.clearListeners();\n    this._disposed = true;\n  }\n\n  public clearListeners(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n\nexport function runAndSubscribe<T>(event: IEvent<T>, handler: (e: T | undefined) => any): IDisposable {\n  handler(undefined);\n  return event(e => handler(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType, SpecialColorIndex } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via xterm-addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with same chunk and the promise\n   *   resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order\n   * and proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing, fire only for rows within the\n    // _viewport_ which is relative to ydisp, not relative to ybase.\n    const viewportEnd = this._dirtyRowTracker.end + (this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n    const viewportStart = this._dirtyRowTracker.start + (this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n    if (viewportStart < this._bufferService.rows) {\n      this._onRequestRefreshRows.fire(Math.min(viewportStart, this._bufferService.rows - 1), Math.min(viewportEnd, this._bufferService.rows - 1));\n    }\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    let precedingJoinState = this._parser.precedingJoinState;\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      const currentInfo = this._unicodeService.charProperties(code, precedingJoinState);\n      chWidth = UnicodeService.extractWidth(currentInfo);\n      const shouldJoin = UnicodeService.extractShouldJoin(currentInfo);\n      const oldWidth = shouldJoin ? UnicodeService.extractWidth(precedingJoinState) : 0;\n      precedingJoinState = currentInfo;\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - oldWidth > cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          const oldRow = bufferRow;\n          let oldCol = this._activeBuffer.x - oldWidth;\n          this._activeBuffer.x = oldWidth;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n          if (oldWidth > 0 && bufferRow instanceof BufferLine) {\n            // Combining character widens 1 column to 2.\n            // Move old character to next line.\n            bufferRow.copyCellsFrom(oldRow as BufferLine,\n              oldCol, 0, oldWidth, false);\n          }\n          // clear left over cells to the right\n          while (oldCol < cols) {\n            oldRow.setCellFromCodePoint(oldCol++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (shouldJoin && this._activeBuffer.x) {\n        const offset = bufferRow.getWidth(this._activeBuffer.x - 1) ? 1 : 2;\n        // if empty cell after fullwidth, need to go 2 cells back\n        // it is save to step 2 cells back here\n        // since an empty cell is only set by fullwidth chars\n        bufferRow.addCodepointToCell(this._activeBuffer.x - offset,\n          code, chWidth);\n        for (let delta = chWidth - oldWidth; --delta >= 0; ) {\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n        continue;\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth - oldWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n\n    this._parser.precedingJoinState = precedingJoinState;\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    } else {\n      // There was an explicit line feed (not just a carriage return), so clear the wrapped state of\n      // the line. This is particularly important on conpty/Windows where revisiting lines to\n      // reprint is common, especially on resize. Note that the windowsMode wrapped line heuristics\n      // can mess with this so windowsMode should be disabled, which is recommended on Windows build\n      // 21376 and above.\n      this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one\n        //   cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once\n          // before early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData(),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row. The cell gets replaced with the eraseChar of\n   * the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y);\n    if (line) {\n      line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n      this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the\n   * blank characters. Text between the cursor and right margin moves to the right. Characters moved\n   * past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to\n   * the left. Character attributes move with the characters. The terminal adds blank characters at\n   * the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll\n   * margins, moving content to the right. Content at the right margin is lost. DECIC has no effect\n   * outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * We extend xterm's behavior to allow repeating entire grapheme clusters.\n   * This isn't 100% xterm-compatible, but it seems saner and more useful.\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty, the\n   * preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is\n   * set. REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    const joinState = this._parser.precedingJoinState;\n    if (!joinState) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const chWidth = UnicodeService.extractWidth(joinState);\n    const x = this._activeBuffer.x - chWidth;\n    const bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n    const text = bufferRow.getString(x);\n    const data = new Uint32Array(text.length * length);\n    let idata = 0;\n    for (let itext = 0; itext < text.length; ) {\n      const ch = text.codePointAt(itext) || 0;\n      data[idata++] = ch;\n      itext += ch > 0xffff ? 2 : 1;\n    }\n    let tlength = idata;\n    for (let i = 1; i < length; ++i) {\n      data.copyWithin(tlength, 0, idata);\n      tlength += idata;\n    }\n    this.print(data, 0, tlength);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_RESET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_SET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 67) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 53        | Overlined.                                               | #Y      |\n   * | 55        | Not Overlined.                                           | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58)\n   * as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 53) {\n        // overline\n        attr.bg |= BgFlags.OVERLINE;\n      } else if (p === 55) {\n        // not overline\n        attr.bg &= ~BgFlags.OVERLINE;\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full\n   * terminal bootstrap, DECSTR only resets certain attributes. For most needs DECSTR should be\n   * sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event\n   * `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from\n   * `XParseColor` (see OSC 10 for supported formats). There may be multipe `c ; spec` pairs present\n   * in the same instruction. If `spec` contains `?` the terminal returns a sequence with the\n   * currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (isValidColorIndex(index)) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character.\n   * Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover\n   * feedback. Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [SpecialColorIndex.FOREGROUND, SpecialColorIndex.BACKGROUND, SpecialColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (isValidColorIndex(index)) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the\n   * corresponding CSI string, `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n\nfunction isValidColorIndex(value: number): value is ColorIndex {\n  return 0 <= value && value < 256;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n  private _value?: T;\n  private _isDisposed = false;\n\n  /**\n   * Gets the value if it exists.\n   */\n  public get value(): T | undefined {\n    return this._isDisposed ? undefined : this._value;\n  }\n\n  /**\n   * Sets the value, disposing of the old value if it exists.\n   */\n  public set value(value: T | undefined) {\n    if (this._isDisposed || value === this._value) {\n      return;\n    }\n    this._value?.dispose();\n    this._value = value;\n  }\n\n  /**\n   * Resets the stored value and disposes of the previously stored value.\n   */\n  public clear(): void {\n    this.value = undefined;\n  }\n\n  public dispose(): void {\n    this._isDisposed = true;\n    this._value?.dispose();\n    this._value = undefined;\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\ndeclare const process: unknown;\n\nexport const isNode = (typeof process !== 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value));\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    // Duplicate the array to avoid issues when _array changes while iterating\n    return [...this._array].values();\n  }\n\n  private _search(key: number): number {\n    let min = 0;\n    let max = this._array.length - 1;\n    while (max >= min) {\n      let mid = (min + max) >> 1;\n      const midKey = this._getKey(this._array[mid]);\n      if (midKey > key) {\n        max = mid - 1;\n      } else if (midKey < key) {\n        min = mid + 1;\n      } else {\n        // key in list, walk to lowest duplicate\n        while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n          mid--;\n        }\n        return mid;\n      }\n    }\n    // key not in list\n    // still return closest min (also used as insert position)\n    return min;\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n  public isOverline(): number      { return this.bg & BgFlags.OVERLINE; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IdleTaskQueue } from 'common/TaskQueue';\nimport { IAttributeData, IBufferLine, ICellData, ICharset } from 'common/Types';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { getWrappedLineTrimmedLength, reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths } from 'common/buffer/BufferReflow';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, WHITESPACE_CELL_WIDTH } from 'common/buffer/Constants';\nimport { Marker } from 'common/buffer/Marker';\nimport { IBuffer } from 'common/buffer/Types';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode || this._optionsService.rawOptions.windowsPty.backend !== undefined || this._optionsService.rawOptions.windowsPty.buildNumber !== undefined) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted\n      // lines, which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    const windowsPty = this._optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber) {\n      return this._hasScrollback && windowsPty.backend === 'conpty' && windowsPty.buildNumber >= 21376;\n    }\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IAttributeData, IBufferLine, ICellData, IExtendedAttrs } from 'common/Types';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { CellData } from 'common/buffer/CellData';\nimport { Attributes, BgFlags, CHAR_DATA_ATTR_INDEX, CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, Content, NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR } from 'common/buffer/Constants';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number, width: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n    }\n    if (width) {\n      content &= ~Content.WIDTH_MASK;\n      content |= width << Content.WIDTH_SHIFT;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public getNoBgTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK) || (this._data[i * CELL_SIZE + Cell.BG] & Attributes.CM_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000,\n  OVERLINE = 0x40000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private readonly _disposables: IDisposable[] = [];\n\n  private readonly _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock,\n        // volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate\n      // pair conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider, UnicodeCharProperties, UnicodeCharWidth } from 'common/services/Services';\nimport { UnicodeService } from 'common/services/UnicodeService';\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): UnicodeCharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as UnicodeCharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n\n  public charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties {\n    let width = this.wcwidth(codepoint);\n    let shouldJoin = width === 0 && preceding !== 0;\n    if (shouldJoin) {\n      const oldWidth = UnicodeService.extractWidth(preceding);\n      if (oldWidth === 0) {\n        shouldJoin = false;\n      } else if (oldWidth > width) {\n        width = oldWidth;\n      }\n    }\n    return UnicodeService.createPropertyValue(0, width, shouldJoin);\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens\n         * took very long). This cannot be solved here for the handler itself (it is the handlers\n         * responsibility to slice hard work), but we can at least schedule a screen update as we\n         * gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingJoinState: number; // UnicodeJoinProperties\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingJoinState = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingJoinState = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing. This is a really bad\n           * condition with screwed up execution order and prolly messed up terminal state,\n           * therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that, as\n           * the pending async handler still might mess up the terminal later. Instead fix the\n           * faulty async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingJoinState = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingJoinState = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport class BufferNamespaceApi extends Disposable implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = this.register(new EventEmitter<IBufferApi>());\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    super();\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward\n    //       event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { clone } from 'common/Clone';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { IBufferService, ICoreService, ILogService, IOptionsService } from 'common/services/Services';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecoration, IDecorationOptions, IMarker } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => this.reset()));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public get isDisposed(): boolean { return this._isDisposed; }\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  trace: LogLevelEnum.TRACE,\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  private _logLevel: LogLevelEnum = LogLevelEnum.OFF;\n  public get logLevel(): LogLevelEnum { return this._logLevel; }\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n\n    // For trace logging, assume the latest created log service is valid\n    traceLogger = this;\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, (this._optionsService.options.logger ? '' : LOG_PREFIX) + message, ...optionalParams);\n  }\n\n  public trace(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.TRACE) {\n      this._log(this._optionsService.options.logger?.trace.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.DEBUG) {\n      this._log(this._optionsService.options.logger?.debug.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.INFO) {\n      this._log(this._optionsService.options.logger?.info.bind(this._optionsService.options.logger) ?? console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.WARN) {\n      this._log(this._optionsService.options.logger?.warn.bind(this._optionsService.options.logger) ?? console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.ERROR) {\n      this._log(this._optionsService.options.logger?.error.bind(this._optionsService.options.logger) ?? console.error, message, optionalParams);\n    }\n  }\n}\n\nlet traceLogger: ILogService;\nexport function setTraceLogger(logger: ILogService): void {\n  traceLogger = logger;\n}\n\n/**\n * A decorator that can be used to automatically log trace calls to the decorated function.\n */\nexport function traceCall(_target: any, key: string, descriptor: any): any {\n  if (typeof descriptor.value !== 'function') {\n    throw new Error('not supported');\n  }\n  const fnKey = 'value';\n  const fn = descriptor.value;\n  descriptor[fnKey] = function (...args: any[]) {\n    // Early exit\n    if (traceLogger.logLevel !== LogLevelEnum.TRACE) {\n      return fn.apply(this, args);\n    }\n\n    traceLogger.trace(`GlyphRenderer#${fn.name}(${args.map(e => JSON.stringify(e)).join(', ')})`);\n    const result = fn.apply(this, args);\n    traceLogger.trace(`GlyphRenderer#${fn.name} return`, result);\n    return result;\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { FontWeight, IOptionsService, ITerminalOptions } from 'common/services/Services';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  cursorInactiveStyle: 'outline',\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  documentOverride: null,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  ignoreBracketedPasteMode: false,\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  logger: null,\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  windowsPty: {},\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n      case 'windowsPty':\n        value = value ?? {};\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, CursorInactiveStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler, IWindowsPty, ILogger } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<TArgs extends any[]> = TArgs extends [] ? []\n  : TArgs extends [...infer TFirst, infer TLast] ? TLast extends IBrandedService ? GetLeadingNonServiceArgs<TFirst> : TArgs\n    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  TRACE = 0,\n  DEBUG = 1,\n  INFO = 2,\n  WARN = 3,\n  ERROR = 4,\n  OFF = 5\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  readonly logLevel: LogLevelEnum;\n\n  trace(message: any, ...optionalParams: any[]): void;\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  cursorInactiveStyle?: CursorInactiveStyle;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  documentOverride?: any | null;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  ignoreBracketedPasteMode?: boolean;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  logger?: ILogger | null;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowsPty?: IWindowsPty;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\n/*\n * Width and Grapheme_Cluster_Break properties of a character as a bit mask.\n *\n * bit 0: shouldJoin - should combine with preceding character.\n * bit 1..2: wcwidth - see UnicodeCharWidth.\n * bit 3..31: class of character (currently only 4 bits are used).\n *   This is used to determined grapheme clustering - i.e. which codepoints\n *   are to be combined into a single compound character.\n *\n * Use the UnicodeService static function createPropertyValue to create a\n * UnicodeCharProperties; use extractShouldJoin, extractWidth, and\n * extractCharKind to extract the components.\n */\nexport type UnicodeCharProperties = number;\n\n/**\n * Width in columns of a character.\n * In a CJK context, \"half-width\" characters (such as Latin) are width 1,\n * while \"full-width\" characters (such as Kanji) are 2 columns wide.\n * Combining characters (such as accents) are width 0.\n */\nexport type UnicodeCharWidth = 0 | 1 | 2;\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): UnicodeCharWidth;\n  getStringCellWidth(s: string): number;\n  /**\n   * Return character width and type for grapheme clustering.\n   * If preceding != 0, it is the return code from the previous character;\n   * in that case the result specifies if the characters should be joined.\n   */\n  charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): UnicodeCharWidth;\n  charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\nimport { IUnicodeService, IUnicodeVersionProvider, UnicodeCharProperties, UnicodeCharWidth } from 'common/services/Services';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  public static extractShouldJoin(value: UnicodeCharProperties): boolean {\n    return (value & 1) !== 0;\n  }\n  public static extractWidth(value: UnicodeCharProperties): UnicodeCharWidth {\n    return ((value >> 1) & 0x3) as UnicodeCharWidth;\n  }\n  public static extractCharKind(value: UnicodeCharProperties): number {\n    return value >> 3;\n  }\n  public static createPropertyValue(state: number, width: number, shouldJoin: boolean = false): UnicodeCharProperties {\n    return ((state & 0xffffff) << 3) | ((width & 3) << 1) | (shouldJoin?1:0);\n  }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): UnicodeCharWidth {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    let precedingInfo = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      const currentInfo = this.charProperties(code, precedingInfo);\n      let chWidth = UnicodeService.extractWidth(currentInfo);\n      if (UnicodeService.extractShouldJoin(currentInfo)) {\n        chWidth -= UnicodeService.extractWidth(precedingInfo);\n      }\n      result += chWidth;\n      precedingInfo = currentInfo;\n    }\n    return result;\n  }\n\n  public charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties {\n    return this._activeProvider.charProperties(codepoint, preceding);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { IBufferNamespace as IBufferNamespaceApi, IDecoration, IDecorationOptions, IDisposable, ILinkProvider, ILocalizableStrings, IMarker, IModes, IParser, ITerminalAddon, Terminal as ITerminalApi, ITerminalInitOnlyOptions, IUnicodeHandling } from 'xterm';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal extends Disposable implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions & ITerminalInitOnlyOptions) {\n    super();\n\n    this._core = this.register(new TerminalCore(options));\n    this._addonManager = this.register(new AddonManager());\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = this.register(new BufferNamespaceApi(this._core));\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.registerMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    super.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n"],"names":["t","self","FitAddon","activate","e","this","_terminal","dispose","fit","proposeDimensions","isNaN","cols","rows","_core","_renderService","clear","resize","element","parentElement","dimensions","css","cell","width","height","r","options","scrollback","viewport","scrollBarWidth","i","window","getComputedStyle","o","parseInt","getPropertyValue","s","Math","max","n","l","a","floor","module","exports","globalThis","h","c","AccessibilityManager","Disposable","constructor","super","_coreBrowserService","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityContainer","mainDocument","createElement","classList","add","_rowContainer","setAttribute","_rowElements","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","_handleBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","length","_refreshRowsDimensions","_liveRegion","_liveRegionDebouncer","register","TimeBasedDebouncer","_renderRows","bind","Error","insertAdjacentElement","onResize","_handleResize","onRender","_refreshRows","start","end","onScroll","onA11yChar","_handleChar","onLineFeed","onA11yTab","_handleTab","onKey","_handleKey","key","onBlur","_clearLiveRegion","onDimensionsChange","onDprChange","toDisposable","remove","shift","textContent","tooMuchOutput","test","push","refresh","buffer","lines","toString","translateBufferLineToString","ydisp","innerText","_announceCharacters","target","getAttribute","relatedTarget","pop","removeChild","removeEventListener","unshift","scrollLines","focus","preventDefault","stopImmediatePropagation","children","tabIndex","_refreshRowDimensions","style","canvas","IInstantiationService","ICoreBrowserService","IRenderService","replace","decPrivateModes","bracketedPasteMode","rawOptions","ignoreBracketedPasteMode","triggerDataEvent","value","getBoundingClientRect","clientX","left","clientY","top","zIndex","prepareTextForTerminal","bracketTextForPaste","copyHandler","clipboardData","setData","selectionText","handlePasteEvent","stopPropagation","getData","paste","moveTextAreaUnderMouseCursor","rightClickHandler","rightClickSelect","select","ColorContrastCache","_color","TwoKeyMap","_css","setCss","set","getCss","get","setColor","getColor","addDisposableDomListener","Linkifier2","currentLink","_currentLink","_bufferService","_linkProviders","_linkCacheDisposables","_isMouseOut","_wasResized","_activeLine","_onShowLinkUnderline","EventEmitter","onShowLinkUnderline","event","_onHideLinkUnderline","onHideLinkUnderline","getDisposeArrayDisposable","_lastMouseEvent","_clearCurrentLink","registerLinkProvider","indexOf","splice","attachToDom","_element","_mouseService","_handleMouseMove","_handleMouseDown","_handleMouseUp","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","x","y","_handleHover","_askForLink","_linkAtPosition","link","_activeProviderReplies","forEach","Map","entries","_checkLinkProviderResult","provideLinks","map","size","_removeIntersectingLinks","Set","range","has","find","_handleNewLink","_mouseDownLink","text","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","Object","defineProperties","toggle","_fireUnderlineEvent","onRenderedViewportChange","hover","_createLinkUnderlineEvent","fire","leave","getCoords","x1","y1","x2","y2","fg","IBufferService","promptLabel","OscLinkProvider","_optionsService","_oscLinkService","linkHandler","CellData","getTrimmedLength","d","hasContent","loadCell","hasExtendedAttrs","extended","urlId","getLinkData","uri","allowNonHttpProtocols","URL","includes","protocol","confirm","open","opener","location","href","console","warn","IOptionsService","IOscLinkService","RenderDebouncer","_parentWindow","_renderCallback","_refreshCallbacks","_animationFrame","cancelAnimationFrame","addRefreshCallback","requestAnimationFrame","_innerRefresh","_rowCount","_rowStart","min","_rowEnd","_runRefreshCallbacks","_","u","f","v","g","p","m","S","C","b","w","E","k","L","D","R","A","B","T","M","O","CoreTerminal","onFocus","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","onWillOpen","_onWillOpen","arguments","undefined","browser","_keyDownHandled","_keyDownSeen","_keyPressHandled","_unprocessedDeadKey","_accessibilityManager","MutableDisposable","_onCursorMove","onCursorMove","_onKey","_onRender","_onSelectionChange","onSelectionChange","_onTitleChange","onTitleChange","_onBell","onBell","_setup","linkifier2","_instantiationService","createInstance","_decorationService","DecorationService","setService","IDecorationService","_inputHandler","onRequestBell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","_afterResize","_customKeyEventHandler","parentNode","_themeService","index","type","color","toColorRGB","colors","ansi","coreService","C0","ESC","toRgbString","C1_ESCAPED","ST","modifyColors","rgba","toColor","restoreColor","buffers","active","textarea","preventScroll","_handleScreenReaderModeOptionChange","_handleTextAreaFocus","sendFocus","updateCursorStyle","_showCursor","blur","_handleTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","ybase","getWidth","lineHeight","_initGlobal","_bindKeys","hasSelection","_selectionService","optionsService","isFirefox","button","screenElement","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","isConnected","_logService","debug","ownerDocument","defaultView","_document","documentOverride","Document","dir","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","isChromeOS","CoreBrowserService","document","_charSizeService","CharSizeService","ICharSizeService","ThemeService","IThemeService","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","RenderService","_compositionView","CompositionHelper","hasRenderer","setRenderer","_createRenderer","MouseService","IMouseService","Viewport","onRequestScrollLines","amount","suppressScrollEvent","onRequestSyncScrollBar","syncScrollArea","handleCursorMove","handleResize","handleBlur","handleFocus","SelectionService","ISelectionService","onRequestRedraw","handleSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","BufferDecorationRenderer","handleMouseDown","coreMouseService","areMouseEventsActive","disable","enable","screenReaderMode","onSpecificOptionChange","overviewRulerWidth","_overviewRulerRenderer","OverviewRulerRenderer","measure","bindMouse","DomRenderer","getMouseReportCoords","overrideType","buttons","getLinesScrolled","deltaY","triggerMouseEvent","col","row","action","ctrl","ctrlKey","alt","altKey","shiftKey","mouseup","wheel","mousedrag","mousemove","cancel","onProtocolChange","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","applicationCursorKeys","abs","handleWheel","handleTouchStart","handleTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","attachCustomKeyEventHandler","registerCharacterJoiner","deregisterCharacterJoiner","deregister","markers","registerMarker","addMarker","registerDecoration","setSelection","getSelection","getSelectionPosition","selectionStart","selectionEnd","clearSelection","selectAll","selectLines","isMac","macOptionIsMeta","keydown","scrollOnUserInput","scrollToBottom","evaluateKeyboardEvent","_isThirdLevelShift","metaKey","charCodeAt","ETX","CR","domEvent","isWindows","getModifierState","keyCode","charCode","which","String","fromCharCode","data","inputType","composed","hasValidSize","clearAllMarkers","getBlankLine","DEFAULT_ATTR_DATA","position","source","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","toFixed","GET_CELL_SIZE_PIXELS","cancelEvents","Terminal","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","clearTimeout","Date","now","setTimeout","_scrollArea","_currentRowHeight","_currentDeviceCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","_smoothScrollState","startTime","origin","_onRequestScrollLines","offsetWidth","_handleScroll","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","_handleThemeChange","onChangeColors","backgroundColor","background","_refresh","device","dpr","offsetHeight","round","scrollTop","offsetParent","_smoothScroll","_isDisposed","_smoothScrollPercent","_clearSmoothScrollState","smoothScrollDuration","_bubbleScroll","cancelable","_getPixelsScrolled","scrollHeight","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","getBufferElements","isWrapped","translateToString","bufferElements","cursorElement","DOM_DELTA_PIXEL","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","_screenElement","_decorationElements","_altBufferIsActive","_dimensionsChanged","_container","_doRefreshDecorations","_queueRefresh","onDecorationRegistered","onDecorationRemoved","_removeDecoration","_renderDecoration","_refreshStyle","_refreshXPosition","_createElement","layer","marker","line","display","onRenderEmitter","onDispose","delete","anchor","right","ColorZoneStore","_zones","_zonePool","_zonePoolIndex","_linePadding","full","center","zones","addDecoration","overviewRulerOptions","_lineIntersectsZone","_lineAdjacentToZone","_addLineToZone","startBufferLine","endBufferLine","setPadding","_width","_colorZoneStore","_shouldUpdateDimensions","_shouldUpdateAnchor","_lastKnownBufferLength","_canvas","_refreshCanvasDimensions","insertBefore","getContext","_ctx","_registerDecorationListeners","_registerBufferChangeListeners","_registerDimensionChangeListeners","normal","_refreshDrawHeightConstants","_refreshColorZonePadding","_containerHeight","clientHeight","_refreshDrawConstants","ceil","_refreshDecorations","clearRect","lineWidth","_renderColorZone","fillStyle","fillRect","_isComposing","_textarea","_coreService","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","substring","DEL","fontFamily","fontSize","ICoreService","getCoordsRelativeToElement","moveToCellSequence","_linkifier2","_terminalClass","_refreshRowElements","_selectionContainer","createRenderDimensions","_updateDimensions","onOptionChange","_handleOptionsChanged","_injectCss","_rowFactory","DomRendererRowFactory","_handleLinkHover","_handleLinkLeave","_widthCache","_themeStyleElement","_dimensionsStyleElement","WidthCache","setFont","fontWeight","fontWeightBold","_setDefaultSpacing","char","letterSpacing","overflow","_terminalSelector","foreground","multiplyOpacity","cursor","cursorAccent","cursorWidth","selectionBackgroundOpaque","selectionInactiveBackgroundOpaque","INVERTED_DEFAULT_COLOR","opaque","defaultSpacing","handleDevicePixelRatioChange","handleCharSizeChanged","renderRows","replaceChildren","_createSelectionElement","cursorBlink","cursorStyle","cursorInactiveStyle","createRow","_setCellUnderline","_workCell","_columnSelectMode","_selectionStart","_selectionEnd","getJoinedCharacters","getNoBgTrimmedLength","P","I","JoinedCellData","H","_isCellInSelection","F","W","U","forEachDecorationAtCell","N","getChars","WHITESPACE_CELL_CHAR","isUnderline","isOverline","isBold","isItalic","bg","selectionForeground","ext","isInvisible","isCursorHidden","isFocused","isDim","underlineStyle","isUnderlineColorDefault","isUnderlineColorRGB","textDecorationColor","AttributeData","getUnderlineColor","join","drawBoldTextInBrightColors","isStrikethrough","textDecoration","$","getFgColor","j","getFgColorMode","z","getBgColor","K","getBgColorMode","q","isInverse","V","G","X","J","backgroundColorRGB","foregroundColorRGB","_addStyle","_applyMinimumContrast","className","minimumContrastRatio","excludeFromContrastRatioDemands","getCode","_getContrastCache","ensureContrastRatio","halfContrastCache","contrastCache","_flat","Float32Array","_font","_fontSize","_weight","_weightBold","_measureElements","whiteSpace","fontKerning","fontStyle","_holey","fill","_measure","repeat","DIM_OPACITY","TEXT_BASELINE","isLegacyEdge","throwIfFalsy","isPowerlineGlyph","isRestrictedPowerlineGlyph","SelectionModel","isSelectAllActive","selectionStartLength","finalSelectionStart","areSelectionValuesReversed","finalSelectionEnd","handleTrim","_onCharSizeChange","onCharSizeChange","_measureStrategy","onMultipleOptionChange","_parentElement","_result","_measureElement","Number","content","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","id","handler","getFg","getBg","_getJoinedRanges","error","_mergeRanges","_stringRangesToCellRanges","getString","_window","_isFocused","_cachedIsFocused","_screenDprMonitor","_onDprChange","_onWindowChange","onWindowChange","setWindow","devicePixelRatio","hasFocus","queueMicrotask","_windowResizeListener","_outerListener","_setDprAndFireIfDiffers","_currentDevicePixelRatio","_updateDpr","_setWindowResizeListener","clearListener","_resolutionMediaMatchList","removeListener","matchMedia","addListener","_renderer","_pausedResizeTask","DebouncedIdleTask","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRenderedViewportChange","_onRefreshRequest","onRefreshRequest","_renderDebouncer","_fullRefresh","IntersectionObserver","_handleIntersectionChange","threshold","observe","disconnect","isIntersecting","intersectionRatio","flush","_fireOnCanvasResize","RegExp","_linkifier","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_mouseMoveListener","_mouseUpListener","onUserInput","_trimListener","onTrim","_handleTrim","_handleBufferActivate","_model","_activeSelectionMode","_removeMouseDownListeners","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","isCellInSelection","_selectWordAtCursor","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","macOptionClickForcesSelection","timeStamp","_handleIncrementalClick","detail","_handleSingleClick","_handleDoubleClick","_handleTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","setInterval","_dragScroll","clearInterval","hasWidth","_selectLineAt","_selectToWordAt","altClickMovesCursor","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","_getWordAt","charAt","_isCharWordSeparator","slice","trim","getCodePoint","wordSeparator","getWrappedRangeForLine","first","last","createDecorator","DEFAULT_ANSI_COLORS","freeze","channels","toCss","toRgba","_colors","_contrastCache","_halfContrastCache","_onChangeColors","selectionBackgroundTransparent","blend","selectionInactiveBackgroundTransparent","_updateRestoreColors","_setTheme","theme","selectionBackground","selectionInactiveBackground","NULL_COLOR","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","extendedAnsi","_restoreColor","_restoreColors","_maxLength","onDeleteEmitter","onDelete","onInsertEmitter","onInsert","onTrimEmitter","_array","Array","_startIndex","_length","maxLength","_getCyclicIndex","recycle","isFull","trimStart","shiftElements","CircularList","clone","isArray","toChannels","isNode","willReadFrequently","globalCompositeOperation","createLinearGradient","match","parseFloat","getImageData","pow","relativeLuminance","relativeLuminance2","rgb","reduceLuminance","increaseLuminance","toPaddedHex","contrastRatio","_onScrollApi","_windowsWrappingHeuristics","_onBinary","onBinary","_onData","onData","_onLineFeed","_onResize","_onWriteParsed","onWriteParsed","InstantiationService","OptionsService","BufferService","LogService","ILogService","CoreService","CoreMouseService","ICoreMouseService","unicodeService","UnicodeService","IUnicodeService","_charsetService","CharsetService","ICharsetService","OscLinkService","InputHandler","onRequestScrollToBottom","_writeBuffer","handleUserInput","_handleWindowsPtyOptionChange","markRangeDirty","scrollBottom","WriteBuffer","parse","write","writeSync","LogLevelEnum","WARN","MINIMUM_COLS","MINIMUM_ROWS","scroll","scrollPages","scrollToTop","scrollToLine","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsPty","buildNumber","backend","windowsMode","_enableWindowsWrappingHeuristics","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","call","clearListeners","runAndSubscribe","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","getAttrData","_curAttrData","EscapeSequenceParser","_coreMouseService","_unicodeService","_parser","_parseBuffer","Uint32Array","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","_dirtyRowTracker","setCsiHandlerFallback","identifier","identToString","params","toArray","setEscHandlerFallback","setExecuteHandlerFallback","code","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","selectProtected","requestMode","setExecuteHandler","BEL","bell","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setHyperlink","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","CHARSETS","selectCharset","screenAlignmentPattern","setErrorHandler","DcsHandler","requestStatusString","_preserveStack","_logSlowResolvingAsync","Promise","race","catch","_getCurrentLinkId","DEBUG","prototype","split","clearRange","decode","subarray","charset","wraparound","modes","insertMode","markDirty","setCellFromCodePoint","precedingJoinState","charProperties","extractWidth","extractShouldJoin","stringFromCodePoint","addLineToLink","_eraseAttrData","BufferLine","copyCellsFrom","addCodepointToCell","insertCells","getNullCell","NULL_CELL_CODE","NULL_CELL_WIDTH","convertEol","reverseWraparound","_restrictCursor","nextStop","_setCursor","_moveCursor","tabs","prevStop","_eraseInBufferLine","replaceCells","_resetBufferLine","clearMarkers","deleteCells","codePointAt","copyWithin","_is","termName","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeEncoding","activateAltBuffer","activateNormalBuffer","_updateAttrColor","fromColorRGB","_extractColor","hasSubParams","getSubParams","underlineColor","_processUnderline","updateExtended","_processSGR0","savedX","savedY","savedCurAttrData","savedCharset","_savedCharset","exec","parseColor","_createHyperlink","_finishHyperlink","findIndex","startsWith","registerLink","_setOrReportSpecialColor","markAllDirty","isProtected","block","bar","_disposables","unregister","_value","_data","FourKeyMap","process","navigator","userAgent","platform","isSafari","getSafariVersion","isIpad","isIphone","SortedList","_getKey","insert","_search","getKeyIterator","forEachByKey","values","_tasks","_i","enqueue","_start","_idleCallback","_cancelCallback","_requestCallback","_process","timeRemaining","_createDeadline","PriorityTaskQueue","IdleTaskQueue","requestIdleCallback","cancelIdleCallback","_queue","CHAR_DATA_CODE_INDEX","WHITESPACE_CELL_CODE","isBlink","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","isEmpty","getUnderlineColorMode","isUnderlineColorPalette","getUnderlineStyle","_urlId","_ext","ExtendedAttrs","MAX_BUFFER_SIZE","Buffer","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_memoryCleanupQueue","_memoryCleanupPosition","_cols","_rows","_getCorrectBufferLength","setupTabStops","getWhitespaceCell","fillViewportRows","_isReflowEnabled","_reflow","_batchedMemoryCleanup","cleanupMemory","_reflowLarger","_reflowSmaller","reflowLargerGetLinesToRemove","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","reflowSmallerGetNewLineLengths","newLines","getWrappedLineTrimmedLength","setCell","tabStopWidth","Marker","_removeMarker","_combined","_extendedAttrs","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","byteLength","keys","copyFrom","reduce","_onBufferActivate","_normal","_alt","inactiveBuffer","BufferSet","DEFAULT_COLOR","DEFAULT_ATTR","DEFAULT_EXT","_id","isDisposed","_nextId","_onDispose","Q","Y","Z","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","OSC","PM","APC","toUpperCase","toLowerCase","utf32ToString","_interim","interim","Uint8Array","UnicodeV6","version","wcwidth","createPropertyValue","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","_didUserInput","_innerWrite","resolve","then","PAYLOAD_LIMIT","DcsParser","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","clearHandler","setHandlerFallback","unhook","hook","put","Params","addParam","_handler","_params","_hitLimit","table","setDefault","addMany","TransitionTable","VT500_TRANSITION_TABLE","apply","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","_errorHandler","_identifier","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","_state","_put","fromArray","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","getSubParamsAll","AddonManager","_addons","instance","loadAddon","_wrappedAddonDispose","BufferApiView","_buffer","init","cursorY","cursorX","viewportY","baseY","getLine","BufferLineApiView","_line","getCell","_onBufferChange","onBufferChange","_alternate","alternate","BufferNamespaceApi","ParserApi","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","UnicodeApi","versions","activeVersion","isUserScrolling","_cachedBlankLine","glevel","_charsets","NONE","events","restrict","X10","VT200","DRAG","ANY","DEFAULT","SGR","SGR_PIXELS","_protocols","_encodings","_activeProtocol","_activeEncoding","_lastEvent","_onProtocolChange","addProtocol","addEncoding","_equalEvents","triggerBinaryEvent","down","up","drag","move","_onUserInput","_onRequestScrollToBottom","disableStdin","_decorations","_onDecorationRegistered","_onDecorationRemoved","getDecorationsAtCell","_cachedBg","_cachedFg","foregroundColor","_entries","_len","_key","ServiceCollection","_services","getService","getServiceDependencies","sort","name","_len2","_key2","trace","TRACE","info","INFO","ERROR","off","OFF","_logLevel","_updateLogLevel","_evalLazyOptionalParams","_log","logger","_len3","_key3","log","_len4","_key4","_len5","_key5","_len6","_key6","_len7","_key7","setTraceLogger","traceCall","_len8","_key8","JSON","stringify","DEFAULT_OPTIONS","customGlyphs","allowProposedApi","allowTransparency","_onOptionChange","_sanitizeAndValidateOption","_setupOptions","setter","defineProperty","_entriesWithId","_dataByLinkId","_removeMarkerFromLink","_getEntryIdKey","every","serviceRegistry","extractCharKind","_providers","_onChange","onChange","_activeProvider","getStringCellWidth","_addonManager","_publicOptions","_checkReadonlyOptions","_checkProposedApi","parser","unicode","applicationCursorKeysMode","applicationKeypadMode","mouseTrackingMode","originMode","reverseWraparoundMode","sendFocusMode","wraparoundMode","_verifyIntegers","_verifyPositiveIntegers","writeln","strings","_len9","_key9","_len10","_key10"],"sourceRoot":""}