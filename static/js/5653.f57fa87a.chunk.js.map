{"version":3,"file":"static/js/5653.f57fa87a.chunk.js","mappings":"mRA0CaA,EAAqBC,EAAAA,MAAW,SAA6BC,G,MAElEC,EAQAD,EAAKC,QAPLC,EAOAF,EAAKE,iBANLC,EAMAH,EAAKG,QALLC,EAKAJ,EAAKK,YALLA,OAAW,IAAAD,GAAQA,EACnBE,EAIAN,EAAKO,aAJLA,OAAY,IAAAD,EAAG,WAAUA,EACzBE,EAGAR,EAAKQ,aAFLC,EAEAT,EAAKU,mBAFLA,OAAkB,IAAAD,EAAG,IAAGA,EACrBE,GAAYC,EAAAA,EAAAA,QACfZ,EATE,2GAUAa,EAAoBd,EAAAA,aAAkB,SAACe,GAA4C,OAAAA,EAAEC,gBAAF,GAAoB,IAGvGC,EAAejB,EAAAA,aACjB,SAACkB,G,IAAEC,EAAGD,EAAAC,IAA2B,OAC7BnB,EAAAA,cAACoB,EAAAA,EAAM,KACHpB,EAAAA,cAAA,OAAKqB,UAAWC,EAAAA,IAAqCC,MAAOd,EAAcU,IAAKA,IAFtD,GAKjC,CAACV,IAGCe,EAAoBxB,EAAAA,aACtB,SAACyB,GACQA,GACM,OAAPrB,QAAO,IAAPA,GAAAA,GAER,GACA,CAACA,IAGL,OACIJ,EAAAA,cAAC0B,EAAAA,GAAOC,EAAAA,EAAAA,UAAA,CACJC,UAAU,cACVpB,aAAcA,EACdG,mBAAoBA,GAChBC,EAAY,CAChBV,QAEIF,EAAAA,cAAA,OAAK6B,cAAef,GAAoBZ,GAE5C4B,cAAc,EAGdC,IAAKC,EAAcvB,GACnBwB,aAAa,EACbC,cAAe,CAAEb,UAAWC,EAAAA,KAC5Ba,SAAS,EACTC,cAAeZ,EACfrB,iBAAkBkC,IAAWf,EAAAA,IAA8BnB,GAAgBe,EAAA,GACvEA,EAACI,EAAAA,KAAehB,EAAW,IAE/BgC,oBAAoB,QACpBrB,aAAcA,IAG1B,IAGA,SAASe,EAAcvB,GACnB,YAAwB8B,IAAjB9B,EAA6B,UAAY,GAAA+B,OAAG/B,EAAagC,KAAI,KAAAD,OAAI/B,EAAaiC,IACzF,CAJA3C,EAAmB4C,YAAc,GAAAH,OAAGI,EAAAA,EAAkB,uBCiB/C,IAAMC,EAA0C7C,EAAAA,YAAwC,SAACC,EAAO6C,GAE/F,IAAAzB,EASApB,EAAKoB,UARL0B,EAQA9C,EAAK8C,SAPL7C,EAOAD,EAAKC,QANLgB,EAMAjB,EAAK+C,SANLA,OAAQ,IAAA9B,GAAQA,EAChBd,EAKAH,EAAKG,QAJLyB,EAIA5B,EAAK4B,cAHLjB,EAGAX,EAAKW,aAFLP,EAEAJ,EAAKgD,QAFLA,OAAO,IAAA5C,EAAG,MAAKA,EACZ6C,GAASrC,EAAAA,EAAAA,QACZZ,EAVE,kGAeGkD,EAAsBnD,EAAAA,WAAiBoD,EAAAA,GAArB,GAErB1C,EAAkCV,EAAAA,cAAmCuC,GAApE9B,EAAYC,EAAA,GAAE2C,EAAe3C,EAAA,GAE9B4C,EAA8BtD,EAAAA,WAA7BuD,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAC1BG,EAAsBzD,EAAAA,UAAwB,GAA7C0D,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAElBG,EAAW5D,EAAAA,OAA6B,MAM9CA,EAAAA,WAAgB,WACZ2D,GAAU,GACVR,EAAmB,CAAEU,KAAM,wBAC/B,GAAG,CAACb,EAAUG,IAEd,IAAMW,EAAqB9D,EAAAA,aAAkB,WACzC2D,GAAU,GACVH,OAAcjB,GACdY,EAAmB,CAAEU,KAAM,yBACpB,OAAPzD,QAAO,IAAPA,GAAAA,GACJ,GAAG,CAACA,EAAS+C,IAIP7C,EAAcN,EAAAA,SAAc,WAAM,OC7ItB,OADM+D,ED8IkCH,EAASI,UC7IzCD,aAAmBE,SAAkD,MAAvCF,EAAQG,QAAQ,IAAA1B,OAAIlB,EAAAA,MAD1E,IAAsByC,CD8IgB,GAAqC,CAACH,EAAUF,IAElFS,EAAwCnE,EAAAA,SAC1C,WAAM,MAAC,CACH0D,OAAMA,EACNH,WAAUA,EACV9C,aAAYA,EAHV,GAKN,CAACiD,EAAQH,EAAY9C,IAInB2D,EAAapE,EAAAA,aACf,SAACqE,GACG,OAAArB,OAAWT,EAAY+B,EAAAA,EAAiBpE,GAAWA,EAAQmE,GAAoBnE,CAA/E,GACJ,CAAC8C,EAAU9C,IAETqE,EAAcvE,EAAAA,SAAc,WAAM,OAAAoE,EAAWD,EAAX,GAA0B,CAACA,EAAcC,IAI3EI,OACcjC,IAAhBgC,OAA4BhC,EACxBvC,EAAAA,cAACD,GAAkB4B,EAAAA,EAAAA,UAAA,GACXf,EAAY,CAChBV,QAASqE,EACTjE,YAAaA,EACboD,OAAQA,EACRjD,aAAcA,EACdL,QAAS0D,KAIfW,EAAoBzE,EAAAA,aACtB,SAACe,GAEG,IAAIA,EAAE2D,iBAAN,CAUA,IAFK1B,IAAasB,EAAAA,EAAiBvB,IAAauB,EAAAA,EAAiBpE,SAAwBqC,IAAZrC,GAEtD,CACnByD,GAAU,GACV5C,EAAE4D,UACFnB,EAAczC,GACd,IAAM6D,EAAkB,CAAEnC,KAAM1B,EAAE8D,QAASnC,IAAK3B,EAAE+D,SAClDzB,EAAgBuB,GAChBzB,EAAmB,CAAEU,KAAM,8BAIJtB,IAFA6B,EAAW,CAAEV,QAAQ,EAAMH,WAAYxC,EAAGN,aAAcmE,KAO3E7D,EAAEC,gBAEV,CAEa,OAAba,QAAa,IAAbA,GAAAA,EAAgBd,EA3BhB,CA4BJ,GACA,CAACiC,EAAUD,EAAU7C,EAAS2B,EAAesB,EAAoBiB,IAG/DW,EAAqB1C,IAAWhB,EAAWC,EAAAA,KAE3C0D,EAAQV,EAAAA,EAAiBvB,GAC3BA,EAAS,CACL1B,UAAW0D,EACXZ,aAAYA,EACZtC,cAAe4C,EACfQ,QAAST,EACTrD,IAAKyC,IAGT5D,EAAAA,cAAAA,EAAAA,SAAA,KACKwE,EACAxE,EAAAA,cACGiD,GAAOtB,EAAAA,EAAAA,UAAA,CAEHN,UAAW0D,EACXlD,cAAe4C,EACftD,KAAK+D,EAAAA,EAAAA,IAAUtB,EAAUd,IACtBI,GAEPH,IAMZ,OAAO/C,EAAAA,cAACmF,EAAAA,EAAe,CAACC,aAAc1B,GAASsB,EACnD,IACAnC,EAAYF,YAAc,GAAAH,OAAGI,EAAAA,EAAkB,e,kHE1N/CyC,EAAA,SAAAC,GAAA,SAAAD,I,8CAeA,QAf0BE,EAAAA,EAAAA,WAAAF,EAAAC,GAGfD,EAAAG,UAAAC,OAAP,W,MACUpF,EAA6DqF,KAAKzF,MAAhEoB,EAAShB,EAAAgB,UAAE0B,EAAQ1C,EAAA0C,SAAE4C,EAAKtF,EAAAsF,MAAEC,EAAKvF,EAAAuF,MAAEC,EAAKxF,EAAAwF,MAAKC,GAASjF,EAAAA,EAAAA,QAAAR,EAAxD,kDACA0F,EAAU1D,IAAWhB,EAAWC,EAAAA,MAAYJ,EAAA,IAC7CI,EAAAA,KAAgBqE,EACjBzE,EAACI,EAAAA,KAAgBsE,EAAK,IAE1B,OACI5F,EAAAA,cAAA,MAAA2B,EAAAA,EAAAA,UAAA,CAAIqE,KAAK,QAAWF,EAAS,CAAEzE,UAAW0E,EAAS5E,IAAK0E,IACnD9C,EAGb,EAbcsC,EAAA1C,YAAc,GAAAH,OAAGI,EAAAA,EAAkB,SAcrDyC,C,CAfA,CAA0BY,EAAAA,E,kHCH1BC,EAAA,SAAAZ,GAAA,SAAAY,I,8CAiBA,QAjBiCX,EAAAA,EAAAA,WAAAW,EAAAZ,GAGtBY,EAAAV,UAAAC,OAAP,WACU,IAAAvE,EAAgCwE,KAAKzF,MAAnCoB,EAASH,EAAAG,UAAE8E,EAAKjF,EAAAiF,MAAEC,EAAOlF,EAAAkF,QACjC,OAAa,MAATD,EAEOnG,EAAAA,cAAA,MAAIqB,UAAWgB,IAAWf,EAAAA,IAAsBD,GAAY2E,KAAK,cAIpEhG,EAAAA,cAAA,MAAIqB,UAAWgB,IAAWf,EAAAA,IAAqBD,GAAY2E,KAAK,aAC5DhG,EAAAA,cAACqG,EAAAA,GAAE,CAACC,GAAIF,GAAUD,GAIlC,EAfcD,EAAAvD,YAAc,GAAAH,OAAGI,EAAAA,EAAkB,gBAgBrDsD,C,CAjBA,CAAiClG,EAAAA,U,uGClBpBuG,EAAoCvG,EAAAA,YAAoC,SAACC,EAAOkB,GACzF,IAAMqF,EAAUvG,EAAMwG,MAASC,EAAAA,EAASC,MAClCC,EAAgBJ,EAAUE,EAAAA,EAASC,MAAQD,EAAAA,EAASG,SACpDC,EAAc,GAAAtE,QAAI,EAAIoE,EAAgB,IAAO,GAEnD,OACI5G,EAAAA,cAAC+G,EAAAA,GAAgBpF,EAAAA,EAAAA,UAAA,CAACqF,SAAS,aAAa7F,IAAKA,GAAUlB,GACnDD,EAAAA,cAAA,QACIiH,EAAGT,EAAU,8TAAgU,gRAC7UU,SAAS,UACTC,UAAW,gCAAA3E,OAAgCsE,EAAW,MAAAtE,OAAKsE,EAAW,KACtEvF,MAPE,CAAE6F,gBAAiB,YAWrC,IACAb,EAAUc,aAAe,CACrBZ,KAAMC,EAAAA,EAASG,UAEnBN,EAAU5D,YAAc,4BCnBjB,IAAM2E,EAAqCtH,EAAAA,YAAoC,SAACC,EAAOkB,GAC1F,IAAMqF,EAAUvG,EAAMwG,MAASC,EAAAA,EAASC,MAClCC,EAAgBJ,EAAUE,EAAAA,EAASC,MAAQD,EAAAA,EAASG,SACpDC,EAAc,GAAAtE,QAAI,EAAIoE,EAAgB,IAAO,GAEnD,OACI5G,EAAAA,cAAC+G,EAAAA,GAAgBpF,EAAAA,EAAAA,UAAA,CAACqF,SAAS,cAAc7F,IAAKA,GAAUlB,GACpDD,EAAAA,cAAA,QACIiH,EAAGT,EAAU,yPAA2P,sRACxQU,SAAS,UACTC,UAAW,gCAAA3E,OAAgCsE,EAAW,MAAAtE,OAAKsE,EAAW,KACtEvF,MAPE,CAAE6F,gBAAiB,YAWrC,IACAE,EAAWD,aAAe,CACtBZ,KAAMC,EAAAA,EAASG,UAEnBS,EAAW3E,YAAc,6B,iFCsIZ4E,EAAoCvH,EAAAA,YAA+C,SAACC,EAAOkB,G,QAEhGqG,EAmBAvH,EAAKuH,OAlBLnG,EAkBApB,EAAKoB,UAjBL0B,EAiBA9C,EAAK8C,SAhBLC,EAgBA/C,EAAK+C,SAfLyE,EAeAxH,EAAKwH,KAdLC,EAcAzH,EAAKyH,OAbLC,EAaA1H,EAAK0H,eAZLC,EAYA3H,EAAK2H,aAXLC,EAWA5H,EAAK4H,UAVLjH,EAUAX,EAAKW,aATLL,EASAN,EAAK6H,cATLA,OAAa,IAAAvH,EAAG,WAAUA,EAC1BwH,EAQA9H,EAAK8H,SAPLC,EAOA/H,EAAK+H,qBANLC,EAMAhI,EAAKgI,aALLC,EAKAjI,EAAKiI,KAJLC,EAIAlI,EAAKkI,cAHLzH,EAGAT,EAAKgD,QAHLA,OAAO,IAAAvC,EAAG,IAAGA,EACb0H,EAEAnI,EAAKmI,UADFtC,GAASjF,EAAAA,EAAAA,QACZZ,EApBE,uOAsBAqD,EACgB,eAAlBwE,EACM,CACI,cACAvF,EACA8F,QAAQN,IAEM,aAAlBD,EACE,CACI,OACA,gBACAvF,GAEc,SAAlBuF,EACE,CACI,YACAvF,OACAA,GAGJ,MACIA,OACAA,OACAA,GAvBX+F,EAAMhF,EAAA,GAAEiF,EAAUjF,EAAA,GAAEkF,EAAYlF,EAAA,GA0BjCmF,EAAiC,eAAlBX,EACfY,EAAaD,GAAgBV,EAC7BY,EAAkB,MAARlB,EACVmB,EAAyB,MAAZ7F,EAEb8F,EAAcvH,EAAAA,IAAoBoG,GAClCoB,EAAgBzG,IAClBf,EAAAA,IACAuH,IAAW3H,EAAA,IAENI,EAAAA,KAAiBkG,EAClBtG,EAACI,EAAAA,KAAmB0B,EAEpB9B,EAACI,EAAAA,KAA0B0G,IAAyBhF,IAAa4F,EACjE1H,EAACI,EAAAA,KAAkCmH,EACnCvH,EAACI,EAAAA,KAAmBoH,EAAU,GAElCrH,GAGE0H,EACa,MAAf9I,EAAM+I,OAAiC,MAAhBpB,EAAuB,KAC1C5H,EAAAA,cAAA,QAAMqB,UAAWgB,IAAWf,EAAAA,IAAyBqG,IAChD1H,EAAM+I,MACNpB,GAIPqB,EAASjJ,EAAAA,cACXiD,GAAOtB,EAAAA,EAAAA,WAAAA,EAAAA,EAAAA,WAAAA,EAAAA,EAAAA,UAAA,CAGHuH,WAAWC,EAAAA,EAAAA,IAAuB,CAAC,QAAS,MAE5CnD,KAAM4C,EAAa,OAASL,EAC5Ba,SAAUR,GAAc,EAAI,IACzBS,EAAAA,EAAAA,GAAmBvD,IAClB9C,EAAWsG,EAAiB,CAAC,GAAE,CACnCjI,UAAWyH,IAEfJ,EAAa1I,EAAAA,cAACuG,EAAS,CAAClF,UAAWC,EAAAA,WAAsCiB,EACzEoG,EAGI3I,EAAAA,cAAA,QAAMqB,UAAWC,EAAAA,KACbtB,EAAAA,cAACuJ,EAAAA,EAAI,CAAC9B,KAAMA,EAAI,eAAe,EAAM2B,UAAW,UAEpD7G,EACJvC,EAAAA,cAACwJ,EAAAA,EAAI,CAACnI,UAAWgB,IAAWf,EAAAA,IAAc6G,GAAgBsB,WAAY5B,EAAW1B,MAAOiC,GACnFF,GAELa,EACAH,EAAa5I,EAAAA,cAACsH,EAAU,CAACjG,UAAWC,EAAAA,IAA2B6E,MAAM,uBAAqB5D,GAGxFmH,EAAYrH,MAAUhC,EAAA,IAAIiB,EAAAA,KAAuBsH,EAAUvI,IACjE,OACIL,EAAAA,cAAA,MAAIqB,UAAWqI,EAAWvI,IAAKA,EAAK6E,KAAMsC,EAAM,gBAAiBE,GAChD,MAAZzF,EACGkG,EAEAjJ,EAAAA,cAAC0B,EAAAA,GAAOC,EAAAA,EAAAA,UAAA,CACJgI,WAAW,EACXC,gBAAgB,EAChB5G,SAAUA,EACVlB,cAAc,EACd+H,gBAAiB,EACjBC,gBAAgB,QAChBC,UAAWC,EACXC,YAAa,CAAEjE,KAAMuC,EAAYa,SAAU,GAC3CxH,UAAU,cACVsI,WAAW,GACPtJ,EAAY,CAChBV,QAASF,EAAAA,cAACqF,EAAAA,GAAI1D,EAAAA,EAAAA,UAAA,GAAKsG,GAAelF,GAClCZ,SAAS,EACThC,iBAAkBkC,IAAWf,EAAAA,IAAkC,OAAZV,QAAY,IAAZA,OAAY,EAAZA,EAAcT,oBAEhE8I,GAKrB,IACA1B,EAASF,aAAe,CACpBG,QAAQ,EACRxE,UAAU,EACV6E,WAAW,EACXjH,aAAc,CAAC,EACfmH,cAAUxF,EACVyF,sBAAsB,EACtBE,KAAM,IAEVX,EAAS5E,YAAc,GAAAH,OAAGI,EAAAA,EAAkB,aAE5C,IAAMoH,EAAuD,CAEzDG,KAAM,CAAEC,QAAS,CAAE5J,aAAc,WAAY6J,QAAS,IAAMC,SAAS,GAErEC,OAAQ,CAAEH,QAAS,CAAEG,OAAQ,EAAE,EAAG,IAAMD,SAAS,GACjDE,gBAAiB,CAAEJ,QAAS,CAAE5J,aAAc,WAAY6J,QAAS,IAAMC,SAAS,IAI9EhB,EAAgE,CAClE,iBAAiB,EACjBmB,UAAMlI,EACNmI,aAASnI,EACToI,iBAAapI,EACbqI,kBAAcrI,EACdsI,kBAActI,EACd6G,UAAW,E,mFCxTF0B,EAAgC9K,EAAAA,YAAoC,SAACC,EAAOkB,GACrF,IAAMqF,EAAUvG,EAAMwG,MAASC,EAAAA,EAASC,MAClCC,EAAgBJ,EAAUE,EAAAA,EAASC,MAAQD,EAAAA,EAASG,SACpDC,EAAc,GAAAtE,QAAI,EAAIoE,EAAgB,IAAO,GAEnD,OACI5G,EAAAA,cAAC+G,EAAAA,GAAgBpF,EAAAA,EAAAA,UAAA,CAACqF,SAAS,QAAQ7F,IAAKA,GAAUlB,GAC9CD,EAAAA,cAAA,QACIiH,EAAa,GACbC,SAAS,UACTC,UAAW,gCAAA3E,OAAgCsE,EAAW,MAAAtE,OAAKsE,EAAW,KACtEvF,MAPE,CAAE6F,gBAAiB,YAWrC,IACA0D,EAAMzD,aAAe,CACjBZ,KAAMC,EAAAA,EAASG,UAEnBiE,EAAMnI,YAAc,uB,mFCnBPoI,EAAoC/K,EAAAA,YAAoC,SAACC,EAAOkB,GACzF,IAAMqF,EAAUvG,EAAMwG,MAASC,EAAAA,EAASC,MAClCC,EAAgBJ,EAAUE,EAAAA,EAASC,MAAQD,EAAAA,EAASG,SACpDC,EAAc,GAAAtE,QAAI,EAAIoE,EAAgB,IAAO,GAEnD,OACI5G,EAAAA,cAAC+G,EAAAA,GAAgBpF,EAAAA,EAAAA,UAAA,CAACqF,SAAS,YAAY7F,IAAKA,GAAUlB,GAClDD,EAAAA,cAAA,QACIiH,EAAGT,EAAU,wQAA0Q,wPACvRU,SAAS,UACTC,UAAW,gCAAA3E,OAAgCsE,EAAW,MAAAtE,OAAKsE,EAAW,KACtEvF,MAPE,CAAE6F,gBAAiB,YAWrC,IACA2D,EAAU1D,aAAe,CACrBZ,KAAMC,EAAAA,EAASG,UAEnBkE,EAAUpI,YAAc,2B","sources":["../node_modules/@blueprintjs/core/src/components/context-menu/contextMenuPopover.tsx","../node_modules/@blueprintjs/core/src/components/context-menu/contextMenu.tsx","../node_modules/@blueprintjs/core/src/common/utils/isDarkTheme.ts","../node_modules/@blueprintjs/core/src/components/menu/menu.tsx","../node_modules/@blueprintjs/core/src/components/menu/menuDivider.tsx","../node_modules/@blueprintjs/icons/src/generated/components/small-tick.tsx","../node_modules/@blueprintjs/icons/src/generated/components/caret-right.tsx","../node_modules/@blueprintjs/core/src/components/menu/menuItem.tsx","../node_modules/@blueprintjs/icons/src/generated/components/blank.tsx","../node_modules/@blueprintjs/icons/src/generated/components/clipboard.tsx"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { Classes, DISPLAYNAME_PREFIX } from \"../../common\";\nimport { Popover } from \"../popover/popover\";\nimport type { PopoverTargetProps } from \"../popover/popoverSharedProps\";\nimport { Portal } from \"../portal/portal\";\n\nimport type { ContextMenuPopoverOptions, Offset } from \"./contextMenuShared\";\n\nexport interface ContextMenuPopoverProps extends ContextMenuPopoverOptions {\n    isOpen: boolean;\n    isDarkTheme?: boolean;\n    content: React.JSX.Element;\n    onClose?: () => void;\n    targetOffset: Offset | undefined;\n}\n\n/**\n * A floating popover which is positioned at a given target offset inside its parent element container.\n * Used to display context menus. Note that this behaves differently from other popover components like\n * Popover and Tooltip, which wrap their children with interaction handlers -- if you're looking for the whole\n * interaction package, use ContextMenu instead.\n *\n * @see https://blueprintjs.com/docs/#core/components/context-menu-popover\n */\nexport const ContextMenuPopover = React.memo(function _ContextMenuPopover(props: ContextMenuPopoverProps) {\n    const {\n        content,\n        popoverClassName,\n        onClose,\n        isDarkTheme = false,\n        rootBoundary = \"viewport\",\n        targetOffset,\n        transitionDuration = 100,\n        ...popoverProps\n    } = props;\n    const cancelContextMenu = React.useCallback((e: React.SyntheticEvent<HTMLDivElement>) => e.preventDefault(), []);\n\n    // Popover should attach its ref to the virtual target we render inside a Portal, not the \"inline\" child target\n    const renderTarget = React.useCallback(\n        ({ ref }: PopoverTargetProps) => (\n            <Portal>\n                <div className={Classes.CONTEXT_MENU_VIRTUAL_TARGET} style={targetOffset} ref={ref} />\n            </Portal>\n        ),\n        [targetOffset],\n    );\n\n    const handleInteraction = React.useCallback(\n        (nextOpenState: boolean) => {\n            if (!nextOpenState) {\n                onClose?.();\n            }\n        },\n        [onClose],\n    );\n\n    return (\n        <Popover\n            placement=\"right-start\"\n            rootBoundary={rootBoundary}\n            transitionDuration={transitionDuration}\n            {...popoverProps}\n            content={\n                // this prevents right-clicking inside our context menu\n                <div onContextMenu={cancelContextMenu}>{content}</div>\n            }\n            enforceFocus={false}\n            // Generate key based on offset so that a new Popover instance is created\n            // when offset changes, to force recomputing position.\n            key={getPopoverKey(targetOffset)}\n            hasBackdrop={true}\n            backdropProps={{ className: Classes.CONTEXT_MENU_BACKDROP }}\n            minimal={true}\n            onInteraction={handleInteraction}\n            popoverClassName={classNames(Classes.CONTEXT_MENU_POPOVER, popoverClassName, {\n                [Classes.DARK]: isDarkTheme,\n            })}\n            positioningStrategy=\"fixed\"\n            renderTarget={renderTarget}\n        />\n    );\n});\nContextMenuPopover.displayName = `${DISPLAYNAME_PREFIX}.ContextMenuPopover`;\n\nfunction getPopoverKey(targetOffset: Offset | undefined) {\n    return targetOffset === undefined ? \"default\" : `${targetOffset.left}x${targetOffset.top}`;\n}\n","/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { Classes, DISPLAYNAME_PREFIX, mergeRefs, type Props, Utils } from \"../../common\";\nimport { TooltipContext, TooltipProvider } from \"../popover/tooltipContext\";\n\nimport { ContextMenuPopover } from \"./contextMenuPopover\";\nimport type { ContextMenuPopoverOptions, Offset } from \"./contextMenuShared\";\n\n/**\n * Render props relevant to the _content_ of a context menu (rendered as the underlying Popover's content).\n */\nexport interface ContextMenuContentProps {\n    /** Whether the context menu is currently open. */\n    isOpen: boolean;\n\n    /**\n     * The computed target offset (x, y) coordinates for the context menu click event.\n     * On first render, before any context menu click event has occurred, this will be undefined.\n     */\n    targetOffset: Offset | undefined;\n\n    /** The context menu click event. If isOpen is false, this will be undefined. */\n    mouseEvent: React.MouseEvent<HTMLElement> | undefined;\n}\n\n/**\n * Render props for advanced usage of ContextMenu.\n */\nexport interface ContextMenuChildrenProps {\n    /** Context menu container element class */\n    className: string;\n\n    /** Render props relevant to the content of this context menu */\n    contentProps: ContextMenuContentProps;\n\n    /** Context menu handler which implements the custom context menu interaction */\n    onContextMenu: React.MouseEventHandler<HTMLElement>;\n\n    /** Popover element rendered by ContextMenu, used to establish a click target to position the menu */\n    popover: React.JSX.Element | undefined;\n\n    /** DOM ref for the context menu target, used to detect dark theme */\n    ref: React.Ref<any>;\n}\n\nexport interface ContextMenuProps\n    extends Omit<React.HTMLAttributes<HTMLElement>, \"children\" | \"className\" | \"content\" | \"onContextMenu\">,\n        React.RefAttributes<any>,\n        Props {\n    /**\n     * Menu content. This will usually be a Blueprint `<Menu>` component.\n     * This optionally functions as a render prop so you can use component state to render content.\n     */\n    content: React.JSX.Element | ((props: ContextMenuContentProps) => React.JSX.Element | undefined) | undefined;\n\n    /**\n     * The context menu target. This may optionally be a render function so you can use\n     * component state to render the target.\n     */\n    children: React.ReactNode | ((props: ContextMenuChildrenProps) => React.ReactElement);\n\n    /**\n     * Whether the context menu is disabled.\n     *\n     * @default false\n     */\n    disabled?: boolean;\n\n    /**\n     * Callback invoked when the popover overlay closes.\n     */\n    onClose?: () => void;\n\n    /**\n     * An optional context menu event handler. This can be useful if you want to do something with the\n     * mouse event unrelated to rendering the context menu itself, especially if that involves setting\n     * React state (which is an error to do in the render code path of this component).\n     */\n    onContextMenu?: React.MouseEventHandler<HTMLElement>;\n\n    /**\n     * A limited subset of props to forward along to the popover overlay generated by this component.\n     */\n    popoverProps?: ContextMenuPopoverOptions;\n\n    /**\n     * HTML tag to use for container element. Only used if this component's children are specified as\n     * React node(s), not when it is a render function (in that case, you get to render whatever tag\n     * you wish).\n     *\n     * @default \"div\"\n     */\n    tagName?: keyof React.JSX.IntrinsicElements;\n}\n\n/**\n * Context menu component.\n *\n * @see https://blueprintjs.com/docs/#core/components/context-menu\n */\nexport const ContextMenu: React.FC<ContextMenuProps> = React.forwardRef<any, ContextMenuProps>((props, userRef) => {\n    const {\n        className,\n        children,\n        content,\n        disabled = false,\n        onClose,\n        onContextMenu,\n        popoverProps,\n        tagName = \"div\",\n        ...restProps\n    } = props;\n\n    // ancestor TooltipContext state doesn't affect us since we don't care about parent ContextMenus, we only want to\n    // force disable parent Tooltips in certain cases through dispatching actions\n    // N.B. any calls to this dispatch function will be no-ops if there is no TooltipProvider ancestor of this component\n    const [, tooltipCtxDispatch] = React.useContext(TooltipContext);\n    // click target offset relative to the viewport (e.clientX/clientY), since the target will be rendered in a Portal\n    const [targetOffset, setTargetOffset] = React.useState<Offset | undefined>(undefined);\n    // hold a reference to the click mouse event to pass to content/child render functions\n    const [mouseEvent, setMouseEvent] = React.useState<React.MouseEvent<HTMLElement>>();\n    const [isOpen, setIsOpen] = React.useState<boolean>(false);\n    // we need a ref on the child element (or the wrapper we generate) to check for dark theme\n    const childRef = React.useRef<HTMLDivElement>(null);\n\n    // If disabled prop is changed, we don't want our old context menu to stick around.\n    // If it has just been enabled (disabled = false), then the menu ought to be opened by\n    // a new mouse event. Users should not be updating this prop in the onContextMenu callback\n    // for this component (that will lead to unpredictable behavior).\n    React.useEffect(() => {\n        setIsOpen(false);\n        tooltipCtxDispatch({ type: \"RESET_DISABLED_STATE\" });\n    }, [disabled, tooltipCtxDispatch]);\n\n    const handlePopoverClose = React.useCallback(() => {\n        setIsOpen(false);\n        setMouseEvent(undefined);\n        tooltipCtxDispatch({ type: \"RESET_DISABLED_STATE\" });\n        onClose?.();\n    }, [onClose, tooltipCtxDispatch]);\n\n    // if the menu was just opened, we should check for dark theme (but don't do this on every render)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const isDarkTheme = React.useMemo(() => Utils.isDarkTheme(childRef.current), [childRef, isOpen]);\n\n    const contentProps: ContextMenuContentProps = React.useMemo(\n        () => ({\n            isOpen,\n            mouseEvent,\n            targetOffset,\n        }),\n        [isOpen, mouseEvent, targetOffset],\n    );\n    // create a memoized function to render the menu so that we can call it if necessary in the \"contextmenu\" event\n    // handler which runs before this render function has a chance to re-run and update the `menu` variable\n    const renderMenu = React.useCallback(\n        (menuContentProps: ContextMenuContentProps) =>\n            disabled ? undefined : Utils.isFunction(content) ? content(menuContentProps) : content,\n        [disabled, content],\n    );\n    const menuContent = React.useMemo(() => renderMenu(contentProps), [contentProps, renderMenu]);\n\n    // only render the popover if there is content in the context menu;\n    // this avoid doing unnecessary rendering & computation\n    const maybePopover =\n        menuContent === undefined ? undefined : (\n            <ContextMenuPopover\n                {...popoverProps}\n                content={menuContent}\n                isDarkTheme={isDarkTheme}\n                isOpen={isOpen}\n                targetOffset={targetOffset}\n                onClose={handlePopoverClose}\n            />\n        );\n\n    const handleContextMenu = React.useCallback(\n        (e: React.MouseEvent<HTMLElement>) => {\n            // support nested menus (inner menu target would have called preventDefault())\n            if (e.defaultPrevented) {\n                return;\n            }\n\n            // If disabled, we should avoid the extra work in this event handler.\n            // Otherwise: if using the child or content function APIs, we need to make sure contentProps gets updated,\n            // so we handle the event regardless of whether the consumer returned an undefined menu.\n            const shouldHandleEvent =\n                !disabled && (Utils.isFunction(children) || Utils.isFunction(content) || content !== undefined);\n\n            if (shouldHandleEvent) {\n                setIsOpen(true);\n                e.persist();\n                setMouseEvent(e);\n                const newTargetOffset = { left: e.clientX, top: e.clientY };\n                setTargetOffset(newTargetOffset);\n                tooltipCtxDispatch({ type: \"FORCE_DISABLED_STATE\" });\n\n                const newMenuContent = renderMenu({ isOpen: true, mouseEvent: e, targetOffset: newTargetOffset });\n\n                if (newMenuContent === undefined) {\n                    // If there is no menu content, we shouldn't automatically swallow the contextmenu event, since the\n                    // user probably wants to fall back to default browser behavior. If they still want to disable the\n                    // native context menu in that case, they can do so with their own `onContextMenu` handler.\n                } else {\n                    e.preventDefault();\n                }\n            }\n\n            onContextMenu?.(e);\n        },\n        [disabled, children, content, onContextMenu, tooltipCtxDispatch, renderMenu],\n    );\n\n    const containerClassName = classNames(className, Classes.CONTEXT_MENU);\n\n    const child = Utils.isFunction(children) ? (\n        children({\n            className: containerClassName,\n            contentProps,\n            onContextMenu: handleContextMenu,\n            popover: maybePopover,\n            ref: childRef,\n        })\n    ) : (\n        <>\n            {maybePopover}\n            {React.createElement<React.HTMLAttributes<any>>(\n                tagName,\n                {\n                    className: containerClassName,\n                    onContextMenu: handleContextMenu,\n                    ref: mergeRefs(childRef, userRef),\n                    ...restProps,\n                },\n                children,\n            )}\n        </>\n    );\n\n    // force descendant Tooltips to be disabled when this context menu is open\n    return <TooltipProvider forceDisable={isOpen}>{child}</TooltipProvider>;\n});\nContextMenu.displayName = `${DISPLAYNAME_PREFIX}.ContextMenu`;\n","/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as Classes from \"../classes\";\n\nexport function isDarkTheme(element: Element | Text | null | undefined): boolean {\n    return element != null && element instanceof Element && element.closest(`.${Classes.DARK}`) != null;\n}\n","/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { AbstractPureComponent, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, type Props } from \"../../common/props\";\n\nexport interface MenuProps extends Props, React.HTMLAttributes<HTMLUListElement> {\n    /** Menu items. */\n    children?: React.ReactNode;\n\n    /** Whether the menu items in this menu should use a large appearance. */\n    large?: boolean;\n\n    /** Whether the menu items in this menu should use a small appearance. */\n    small?: boolean;\n\n    /** Ref handler that receives the HTML `<ul>` element backing this component. */\n    ulRef?: React.Ref<HTMLUListElement>;\n}\n\n/**\n * Menu component.\n *\n * @see https://blueprintjs.com/docs/#core/components/menu\n */\nexport class Menu extends AbstractPureComponent<MenuProps> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.Menu`;\n\n    public render() {\n        const { className, children, large, small, ulRef, ...htmlProps } = this.props;\n        const classes = classNames(className, Classes.MENU, {\n            [Classes.LARGE]: large,\n            [Classes.SMALL]: small,\n        });\n        return (\n            <ul role=\"menu\" {...htmlProps} className={classes} ref={ulRef}>\n                {children}\n            </ul>\n        );\n    }\n}\n","/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { Classes, DISPLAYNAME_PREFIX, type Props } from \"../../common\";\nimport { H6 } from \"../html/html\";\n\nexport interface MenuDividerProps extends Props {\n    /** This component does not support children. */\n    children?: never;\n\n    /** Optional header title. */\n    title?: React.ReactNode;\n\n    /** Optional `id` prop for the header title. */\n    titleId?: string;\n}\n\n/**\n * Menu divider component.\n *\n * @see https://blueprintjs.com/docs/#core/components/menu.menu-divider\n */\nexport class MenuDivider extends React.Component<MenuDividerProps> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.MenuDivider`;\n\n    public render() {\n        const { className, title, titleId } = this.props;\n        if (title == null) {\n            // simple divider\n            return <li className={classNames(Classes.MENU_DIVIDER, className)} role=\"separator\" />;\n        } else {\n            // section header with title\n            return (\n                <li className={classNames(Classes.MENU_HEADER, className)} role=\"separator\">\n                    <H6 id={titleId}>{title}</H6>\n                </li>\n            );\n        }\n    }\n}\n","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport type { SVGIconProps } from \"../../svgIconProps\";\nimport { IconSize } from \"../../iconTypes\";\nimport { SVGIconContainer } from \"../../svgIconContainer\";\n\nexport const SmallTick: React.FC<SVGIconProps> = React.forwardRef<any, SVGIconProps>((props, ref) => {\n    const isLarge = props.size! >= IconSize.LARGE;\n    const pixelGridSize = isLarge ? IconSize.LARGE : IconSize.STANDARD;\n    const translation = `${-1 * pixelGridSize / 0.05 / 2}`;\n    const style = { transformOrigin: \"center\" };\n    return (\n        <SVGIconContainer iconName=\"small-tick\" ref={ref}  {...props}>\n            <path\n                d={isLarge ? \"M300 300C294.4000000000001 300 289.4000000000001 297.8 285.8 294.2L160 168.2L114.2 214.2C110.6 217.8 105.6 220 100 220C89 220 80 211 80 200C80 194.4 82.2 189.4 85.8 185.8L145.8 125.8C149.4 122.2 154.4 120 160 120S170.6 122.2 174.2 125.8L314.2000000000001 265.8C317.8 269.4 320 274.4 320 280C320 291 311 300 300 300z\" : \"M240 220C234.4 220 229.4 217.8 225.8 214.2L140 128.2L94.2 174.2C90.6 177.8 85.6 180 80 180C69 180 60 171 60 160C60 154.4 62.2 149.4 65.8 145.8L125.8 85.8C129.4 82.2 134.4 80 140 80S150.6 82.2 154.2 85.8L254.2 185.8C257.8 189.4 260 194.4 260 200C260 211 251 220 240 220z\"}\n                fillRule=\"evenodd\"\n                transform={`scale(0.05, -0.05) translate(${translation}, ${translation})`}\n                style={style}\n            />\n        </SVGIconContainer>\n   );\n});\nSmallTick.defaultProps = {\n    size: IconSize.STANDARD,\n};\nSmallTick.displayName = `Blueprint5.Icon.SmallTick`;\nexport default SmallTick;\n","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport type { SVGIconProps } from \"../../svgIconProps\";\nimport { IconSize } from \"../../iconTypes\";\nimport { SVGIconContainer } from \"../../svgIconContainer\";\n\nexport const CaretRight: React.FC<SVGIconProps> = React.forwardRef<any, SVGIconProps>((props, ref) => {\n    const isLarge = props.size! >= IconSize.LARGE;\n    const pixelGridSize = isLarge ? IconSize.LARGE : IconSize.STANDARD;\n    const translation = `${-1 * pixelGridSize / 0.05 / 2}`;\n    const style = { transformOrigin: \"center\" };\n    return (\n        <SVGIconContainer iconName=\"caret-right\" ref={ref}  {...props}>\n            <path\n                d={isLarge ? \"M280 200C280 206.2 277 211.4 272.6 215.2L272.8 215.4L152.8 315.4L152.6 315.2C149.2 318 144.8 320 140 320C129 320 120 311 120 300V100C120 89 129 80 140 80C144.8 80 149.2 82 152.6 84.8L152.8 84.6L272.8 184.6L272.6 184.8C277 188.6 280 193.8 280 200z\" : \"M220 160C220 163 218.6 165.6 216.6 167.4L216.6 167.4L136.6 237.4L136.6 237.4C134.8 239 132.6 240 130 240C124.4 240 120 235.6 120 230V90C120 84.4 124.4 80 130 80C132.6 80 134.8 81 136.6 82.6C136.6 82.6 136.6 82.6 136.6 82.6L216.6 152.6L216.6 152.6C218.6 154.4 220 157 220 160z\"}\n                fillRule=\"evenodd\"\n                transform={`scale(0.05, -0.05) translate(${translation}, ${translation})`}\n                style={style}\n            />\n        </SVGIconContainer>\n   );\n});\nCaretRight.defaultProps = {\n    size: IconSize.STANDARD,\n};\nCaretRight.displayName = `Blueprint5.Icon.CaretRight`;\nexport default CaretRight;\n","/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport { CaretRight, SmallTick } from \"@blueprintjs/icons\";\n\nimport { Classes } from \"../../common\";\nimport { type ActionProps, DISPLAYNAME_PREFIX, removeNonHTMLProps } from \"../../common/props\";\nimport { clickElementOnKeyPress } from \"../../common/utils\";\nimport { Icon } from \"../icon/icon\";\nimport { Popover, type PopoverProps } from \"../popover/popover\";\nimport { Text } from \"../text/text\";\n\nimport { Menu, type MenuProps } from \"./menu\";\n\n/**\n * Note that the HTML attributes supported by this component are spread to the nested `<a>` element, while the\n * `ref` is attached to the root `<li>` element. This is an unfortunate quirk in the API which we keep around\n * for backwards-compatibility.\n */\nexport interface MenuItemProps\n    extends ActionProps<HTMLAnchorElement>,\n        React.AnchorHTMLAttributes<HTMLAnchorElement>,\n        React.RefAttributes<HTMLLIElement> {\n    /** Item text, required for usability. */\n    text: React.ReactNode;\n\n    /**\n     * Whether this item should appear _active_, often useful to\n     * indicate keyboard focus. Note that this is distinct from _selected_\n     * appearance, which has its own prop.\n     */\n    active?: boolean;\n\n    /**\n     * Children of this component will be rendered in a _submenu_\n     * that appears in a popover when hovering or clicking on this item.\n     *\n     * Use `text` prop for the content of the menu item itself.\n     */\n    children?: React.ReactNode;\n\n    /**\n     * Whether this menu item is non-interactive. Enabling this prop will ignore `href`, `tabIndex`,\n     * and mouse event handlers (in particular click, down, enter, leave).\n     */\n    disabled?: boolean;\n\n    /**\n     * Right-aligned label text content, useful for displaying hotkeys.\n     *\n     * This prop actually supports JSX elements, but TypeScript will throw an error because\n     * `HTMLAttributes` only allows strings. Use `labelElement` to supply a JSX element in TypeScript.\n     */\n    label?: string;\n\n    /**\n     * A space-delimited list of class names to pass along to the right-aligned label wrapper element.\n     */\n    labelClassName?: string;\n\n    /**\n     * Right-aligned label content, useful for displaying hotkeys.\n     */\n    labelElement?: React.ReactNode;\n\n    /**\n     * Changes the ARIA `role` property structure of this MenuItem to accomodate for various\n     * different `role`s of the parent Menu `ul` element.\n     *\n     * If `menuitem`, role structure becomes:\n     *\n     * `<li role=\"none\"><a role=\"menuitem\" /></li>`\n     *\n     * which is proper role structure for a `<ul role=\"menu\"` parent (this is the default `role` of a `Menu`).\n     *\n     * If `listoption`, role structure becomes:\n     *\n     * `<li role=\"option\"><a role={undefined} /></li>`\n     *\n     * which is proper role structure for a `<ul role=\"listbox\"` parent, or a `<select>` parent.\n     *\n     * If `listitem`, role structure becomes:\n     *\n     * `<li role={undefined}><a role={undefined} /></li>`\n     *\n     * which can be used if this item is within a basic `<ul/>` (or `role=\"list\"`) parent.\n     *\n     * If `none`, role structure becomes:\n     *\n     * `<li role=\"none\"><a role={undefined} /></li>`\n     *\n     * which can be used if wrapping this item in a custom `<li>` parent.\n     *\n     * @default \"menuitem\"\n     */\n    roleStructure?: \"menuitem\" | \"listoption\" | \"listitem\" | \"none\";\n\n    /**\n     * Whether the text should be allowed to wrap to multiple lines.\n     * If `false`, text will be truncated with an ellipsis when it reaches `max-width`.\n     *\n     * @default false\n     */\n    multiline?: boolean;\n\n    /**\n     * Props to spread to the submenu popover. Note that `content` and `minimal` cannot be\n     * changed and `usePortal` defaults to `false` so all submenus will live in\n     * the same container.\n     */\n    popoverProps?: Partial<Omit<PopoverProps, \"content\" | \"minimal\">>;\n\n    /**\n     * Whether this item should appear selected.\n     * Defining this  will set the `aria-selected` attribute and apply a\n     * \"check\" or \"blank\" icon on the item (unless the `icon` prop is set,\n     * which always takes precedence).\n     *\n     * @default undefined\n     */\n    selected?: boolean;\n\n    /**\n     * Whether an enabled item without a submenu should automatically close its parent popover when clicked.\n     *\n     * @default true\n     */\n    shouldDismissPopover?: boolean;\n\n    /**\n     * Props to spread to the child `Menu` component if this item has a submenu.\n     */\n    submenuProps?: Partial<MenuProps>;\n\n    /**\n     * Name of the HTML tag that wraps the MenuItem.\n     *\n     * @default \"a\"\n     */\n    tagName?: keyof React.JSX.IntrinsicElements;\n\n    /**\n     * A space-delimited list of class names to pass along to the text wrapper element.\n     */\n    textClassName?: string;\n\n    /**\n     * HTML title to be passed to the <Text> component\n     */\n    htmlTitle?: string;\n}\n\n/**\n * Menu item component.\n *\n * @see https://blueprintjs.com/docs/#core/components/menu.menu-item\n */\nexport const MenuItem: React.FC<MenuItemProps> = React.forwardRef<HTMLLIElement, MenuItemProps>((props, ref) => {\n    const {\n        active,\n        className,\n        children,\n        disabled,\n        icon,\n        intent,\n        labelClassName,\n        labelElement,\n        multiline,\n        popoverProps,\n        roleStructure = \"menuitem\",\n        selected,\n        shouldDismissPopover,\n        submenuProps,\n        text,\n        textClassName,\n        tagName = \"a\",\n        htmlTitle,\n        ...htmlProps\n    } = props;\n\n    const [liRole, targetRole, ariaSelected] =\n        roleStructure === \"listoption\" // \"listoption\": parent has listbox role, or is a <select>\n            ? [\n                  \"option\",\n                  undefined, // target should have no role\n                  Boolean(selected), // aria-selected prop\n              ]\n            : roleStructure === \"menuitem\" // \"menuitem\": parent has menu role\n              ? [\n                    \"none\",\n                    \"menuitem\",\n                    undefined, // don't set aria-selected prop\n                ]\n              : roleStructure === \"none\" // \"none\": allows wrapping MenuItem in custom <li>\n                ? [\n                      \"none\",\n                      undefined, // target should have no role\n                      undefined, // don't set aria-selected prop\n                  ]\n                : // roleStructure === \"listitem\"\n                  [\n                      undefined, // needs no role prop, li is listitem by default\n                      undefined,\n                      undefined, // don't set aria-selected prop\n                  ];\n\n    const isSelectable = roleStructure === \"listoption\";\n    const isSelected = isSelectable && selected;\n    const hasIcon = icon != null;\n    const hasSubmenu = children != null;\n\n    const intentClass = Classes.intentClass(intent);\n    const anchorClasses = classNames(\n        Classes.MENU_ITEM,\n        intentClass,\n        {\n            [Classes.ACTIVE]: active,\n            [Classes.DISABLED]: disabled,\n            // prevent popover from closing when clicking on submenu trigger or disabled item\n            [Classes.POPOVER_DISMISS]: shouldDismissPopover && !disabled && !hasSubmenu,\n            [Classes.MENU_ITEM_IS_SELECTABLE]: isSelectable,\n            [Classes.SELECTED]: isSelected,\n        },\n        className,\n    );\n\n    const maybeLabel =\n        props.label == null && labelElement == null ? null : (\n            <span className={classNames(Classes.MENU_ITEM_LABEL, labelClassName)}>\n                {props.label}\n                {labelElement}\n            </span>\n        );\n\n    const target = React.createElement(\n        tagName,\n        {\n            // for menuitems, onClick when enter key pressed doesn't take effect like it does for a button-- fix this\n            onKeyDown: clickElementOnKeyPress([\"Enter\", \" \"]),\n            // if hasSubmenu, must apply correct role and tabIndex to the outer popover target <span> instead of this target element\n            role: hasSubmenu ? \"none\" : targetRole,\n            tabIndex: hasSubmenu ? -1 : 0,\n            ...removeNonHTMLProps(htmlProps),\n            ...(disabled ? DISABLED_PROPS : {}),\n            className: anchorClasses,\n        },\n        isSelected ? <SmallTick className={Classes.MENU_ITEM_SELECTED_ICON} /> : undefined,\n        hasIcon ? (\n            // wrap icon in a <span> in case `icon` is a custom element rather than a built-in icon identifier,\n            // so that we always render this class\n            <span className={Classes.MENU_ITEM_ICON}>\n                <Icon icon={icon} aria-hidden={true} tabIndex={-1} />\n            </span>\n        ) : undefined,\n        <Text className={classNames(Classes.FILL, textClassName)} ellipsize={!multiline} title={htmlTitle}>\n            {text}\n        </Text>,\n        maybeLabel,\n        hasSubmenu ? <CaretRight className={Classes.MENU_SUBMENU_ICON} title=\"Open sub menu\" /> : undefined,\n    );\n\n    const liClasses = classNames({ [Classes.MENU_SUBMENU]: hasSubmenu });\n    return (\n        <li className={liClasses} ref={ref} role={liRole} aria-selected={ariaSelected}>\n            {children == null ? (\n                target\n            ) : (\n                <Popover\n                    autoFocus={false}\n                    captureDismiss={false}\n                    disabled={disabled}\n                    enforceFocus={false}\n                    hoverCloseDelay={0}\n                    interactionKind=\"hover\"\n                    modifiers={SUBMENU_POPOVER_MODIFIERS}\n                    targetProps={{ role: targetRole, tabIndex: 0 }}\n                    placement=\"right-start\"\n                    usePortal={false}\n                    {...popoverProps}\n                    content={<Menu {...submenuProps}>{children}</Menu>}\n                    minimal={true}\n                    popoverClassName={classNames(Classes.MENU_SUBMENU, popoverProps?.popoverClassName)}\n                >\n                    {target}\n                </Popover>\n            )}\n        </li>\n    );\n});\nMenuItem.defaultProps = {\n    active: false,\n    disabled: false,\n    multiline: false,\n    popoverProps: {},\n    selected: undefined,\n    shouldDismissPopover: true,\n    text: \"\",\n};\nMenuItem.displayName = `${DISPLAYNAME_PREFIX}.MenuItem`;\n\nconst SUBMENU_POPOVER_MODIFIERS: PopoverProps[\"modifiers\"] = {\n    // 20px padding - scrollbar width + a bit\n    flip: { options: { rootBoundary: \"viewport\", padding: 20 }, enabled: true },\n    // shift popover up 5px so MenuItems align\n    offset: { options: { offset: [-5, 0] }, enabled: true },\n    preventOverflow: { options: { rootBoundary: \"viewport\", padding: 20 }, enabled: true },\n};\n\n// props to ignore when disabled\nconst DISABLED_PROPS: React.AnchorHTMLAttributes<HTMLAnchorElement> = {\n    \"aria-disabled\": true,\n    href: undefined,\n    onClick: undefined,\n    onMouseDown: undefined,\n    onMouseEnter: undefined,\n    onMouseLeave: undefined,\n    tabIndex: -1,\n};\n","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport type { SVGIconProps } from \"../../svgIconProps\";\nimport { IconSize } from \"../../iconTypes\";\nimport { SVGIconContainer } from \"../../svgIconContainer\";\n\nexport const Blank: React.FC<SVGIconProps> = React.forwardRef<any, SVGIconProps>((props, ref) => {\n    const isLarge = props.size! >= IconSize.LARGE;\n    const pixelGridSize = isLarge ? IconSize.LARGE : IconSize.STANDARD;\n    const translation = `${-1 * pixelGridSize / 0.05 / 2}`;\n    const style = { transformOrigin: \"center\" };\n    return (\n        <SVGIconContainer iconName=\"blank\" ref={ref}  {...props}>\n            <path\n                d={isLarge ? \"\" : \"\"}\n                fillRule=\"evenodd\"\n                transform={`scale(0.05, -0.05) translate(${translation}, ${translation})`}\n                style={style}\n            />\n        </SVGIconContainer>\n   );\n});\nBlank.defaultProps = {\n    size: IconSize.STANDARD,\n};\nBlank.displayName = `Blueprint5.Icon.Blank`;\nexport default Blank;\n","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport type { SVGIconProps } from \"../../svgIconProps\";\nimport { IconSize } from \"../../iconTypes\";\nimport { SVGIconContainer } from \"../../svgIconContainer\";\n\nexport const Clipboard: React.FC<SVGIconProps> = React.forwardRef<any, SVGIconProps>((props, ref) => {\n    const isLarge = props.size! >= IconSize.LARGE;\n    const pixelGridSize = isLarge ? IconSize.LARGE : IconSize.STANDARD;\n    const translation = `${-1 * pixelGridSize / 0.05 / 2}`;\n    const style = { transformOrigin: \"center\" };\n    return (\n        <SVGIconContainer iconName=\"clipboard\" ref={ref}  {...props}>\n            <path\n                d={isLarge ? \"M260 360C260 371 251 380 240 380H224.4C217.4 392 204.8 400 190 400S162.4 392 155.6 380H140C129 380 120 371 120 360V320H260V360zM320 360H280V320V300H260H120H100V320V360H60C49 360 40 351 40 340V20C40 9 49 0 60 0H320C331 0 340 9 340 20V340C340 351 331 360 320 360z\" : \"M220 280C220 291 211 300 200 300H204.4C197.6 312 184.8 320 170 320S142.4 312 135.6 300H140C129 300 120 291 120 280V260H220V280zM260 280H240V240H100V280H80C69 280 60 271 60 260V20C60 9 69 0 80 0H260C271 0 280 9 280 20V260C280 271 271 280 260 280z\"}\n                fillRule=\"evenodd\"\n                transform={`scale(0.05, -0.05) translate(${translation}, ${translation})`}\n                style={style}\n            />\n        </SVGIconContainer>\n   );\n});\nClipboard.defaultProps = {\n    size: IconSize.STANDARD,\n};\nClipboard.displayName = `Blueprint5.Icon.Clipboard`;\nexport default Clipboard;\n"],"names":["ContextMenuPopover","React","props","content","popoverClassName","onClose","_b","isDarkTheme","_c","rootBoundary","targetOffset","_d","transitionDuration","popoverProps","__rest","cancelContextMenu","e","preventDefault","renderTarget","_a","ref","Portal","className","Classes","style","handleInteraction","nextOpenState","Popover","__assign","placement","onContextMenu","enforceFocus","key","getPopoverKey","hasBackdrop","backdropProps","minimal","onInteraction","classNames","positioningStrategy","undefined","concat","left","top","displayName","DISPLAYNAME_PREFIX","ContextMenu","userRef","children","disabled","tagName","restProps","tooltipCtxDispatch","TooltipContext","setTargetOffset","_e","mouseEvent","setMouseEvent","_f","isOpen","setIsOpen","childRef","type","handlePopoverClose","element","current","Element","closest","contentProps","renderMenu","menuContentProps","Utils","menuContent","maybePopover","handleContextMenu","defaultPrevented","persist","newTargetOffset","clientX","clientY","containerClassName","child","popover","mergeRefs","TooltipProvider","forceDisable","Menu","_super","__extends","prototype","render","this","large","small","ulRef","htmlProps","classes","role","AbstractPureComponent","MenuDivider","title","titleId","H6","id","SmallTick","isLarge","size","IconSize","LARGE","pixelGridSize","STANDARD","translation","SVGIconContainer","iconName","d","fillRule","transform","transformOrigin","defaultProps","CaretRight","MenuItem","active","icon","intent","labelClassName","labelElement","multiline","roleStructure","selected","shouldDismissPopover","submenuProps","text","textClassName","htmlTitle","Boolean","liRole","targetRole","ariaSelected","isSelectable","isSelected","hasIcon","hasSubmenu","intentClass","anchorClasses","maybeLabel","label","target","onKeyDown","clickElementOnKeyPress","tabIndex","removeNonHTMLProps","DISABLED_PROPS","Icon","Text","ellipsize","liClasses","autoFocus","captureDismiss","hoverCloseDelay","interactionKind","modifiers","SUBMENU_POPOVER_MODIFIERS","targetProps","usePortal","flip","options","padding","enabled","offset","preventOverflow","href","onClick","onMouseDown","onMouseEnter","onMouseLeave","Blank","Clipboard"],"sourceRoot":""}